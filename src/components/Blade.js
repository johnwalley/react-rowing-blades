import React from "react";

const Blade = React.forwardRef(({ className, size, club }, ref) => {
  let decal;
  let fill;

  switch (club) {
    case "abn":
      decal = abn;
      fill = "#003c10";
      break;
    case "abs":
      decal = abs;
      fill = "#cc0066";
      break;
    case "age":
      decal = age;
      fill = "#AB0A19";
      break;
    case "akn":
      decal = akn;
      fill = "#008620";
      break;
    case "arg":
      decal = arg;
      fill = "none";
      break;
    case "aru":
      decal = aru;
      fill = "#000000";
      break;
    case "aus":
      decal = aus;
      fill = "#f0f0f0";
      break;
    case "aut":
      decal = aut;
      fill = "#ff0000";
      break;
    case "avn":
      decal = avn;
      fill = "#202020";
      break;
    case "bal":
      decal = bal;
      fill = "#000000";
      break;
    case "bbl":
      decal = bbl;
      fill = "#1667F6";
      break;
    case "bed":
      decal = bed;
      fill = "#8e0000";
      break;
    case "ber":
      decal = ber;
      fill = "#000077";
      break;
    case "bra":
      decal = bra;
      fill = "#F5F5F5";
      break;
    case "brc":
      decal = null;
      fill = "#202020";
      break;
    case "brd":
      decal = brd;
      fill = "#00214E";
      break;
    case "bul":
      decal = bul;
      fill = "#d62612";
      break;
    case "cab":
      decal = cab;
      fill = "#000033";
      break;
    case "cai":
      decal = cai;
      fill = "#202020";
      break;
    case "cam":
      decal = cam;
      fill = "#13294b";
      break;
    case "can":
      decal = can;
      fill = "#ff0000";
      break;
    case "cbs":
      decal = cbs;
      fill = "#008001";
      break;
    case "cco":
      decal = cco;
      fill = "#00214E";
      break;
    case "cha":
      decal = null;
      fill = "#fc6621";
      break;
    case "chb":
      decal = null;
      fill = "#000065";
      break;
    case "chu":
      decal = null;
      fill = "#FF70A0";
      break;
    case "cla":
      decal = null;
      fill = "#FFCC00";
      break;
    case "clh":
      decal = clh;
      fill = "#FFCC00";
      break;
    case "cls":
      decal = cls;
      fill = "#1909AF";
      break;
    case "cnn":
      decal = cnn;
      fill = "#599bfc";
      break;
    case "coo":
      decal = coo;
      fill = "#000040";
      break;
    case "cor":
      decal = cor;
      fill = "#8d0603";
      break;
    case "cox":
      decal = cox;
      fill = "#003366";
      break;
    case "crc":
      decal = crc;
      fill = "#ffffff";
      break;
    case "cro":
      decal = cro;
      fill = "#f2f2f2";
      break;
    case "daw":
      decal = daw;
      fill = "#000080";
      break;
    case "den":
      decal = den;
      fill = "#f2f2f2";
      break;
    case "dow":
      decal = null;
      fill = "#AB0F62";
      break;
    case "dur":
      decal = dur;
      fill = "#000044";
      break;
    case "dus":
      decal = dus;
      fill = "#F5F5F5";
      break;
    case "emm":
      decal = emm;
      fill = "#000077";
      break;
    case "est":
      decal = est;
      fill = "#3a75c4";
      break;
    case "etn":
      decal = null;
      fill = "#B7E1E4";
      break;
    case "exc":
      decal = null;
      fill = "#DF0000";
      break;
    case "fit":
      decal = null;
      fill = "lightgray";
      break;
    case "ftt":
      decal = null;
      fill = "#000044";
      break;
    case "fra":
      decal = fra;
      fill = "#0c1c8c";
      break;
    case "gbr":
      decal = gbr;
      fill = "#f0f0f0";
      break;
    case "ger":
      decal = ger;
      fill = "#202020";
      break;
    case "gir":
      decal = gir;
      fill = "#004600";
      break;
    case "glw":
      decal = glw;
      fill = "#ff0022";
      break;
    case "gre":
      decal = gre;
      fill = "#101f8a";
      break;
    case "gtm":
      decal = gtm;
      fill = "#000032";
      break;
    case "hec":
      decal = hec;
      fill = "#8E0000";
      break;
    case "hom":
      decal = hom;
      fill = "#f9f9f9";
      break;
    case "huh":
      decal = huh;
      fill = "#ffffff";
      break;
    case "iel":
      decal = iel;
      fill = "#ffffff";
      break;
    case "imp":
      decal = imp;
      fill = "#101010";
      break;
    case "ita":
      decal = ita;
      fill = "#008d46";
      break;
    case "jec":
      decal = jec;
      fill = "#202020";
      break;
    case "jeo":
      decal = null;
      fill = "#009C3A";
      break;
    case "kcb":
      decal = null;
      fill = "purple";
      break;
    case "keb":
      decal = keb;
      fill = "#F9F9F9";
      break;
    case "lcc":
      decal = lcc;
      fill = "#136bfb";
      break;
    case "ldr":
      decal = null;
      fill = "#ffc6cf";
      break;
    case "lic":
      decal = lic;
      fill = "#000032";
      break;
    case "lin":
      decal = lin;
      fill = "#ffcc00";
      break;
    case "lmb":
      decal = null;
      fill = "#DC0000";
      break;
    case "lmh":
      decal = lmh;
      fill = "#000032";
      break;
    case "mag":
      decal = mag;
      fill = "#151515";
      break;
    case "man":
      decal = man;
      fill = "#d40000";
      break;
    case "mec":
      decal = null;
      fill = "#F5F5F5";
      break;
    case "mer":
      decal = mer;
      fill = "#ffffff";
      break;
    case "mgd":
      decal = mgd;
      fill = "#8c00cd";
      break;
    case "nec":
      decal = nec;
      fill = "#800080";
      break;
    case "nzl":
      decal = nzl;
      fill = "#202020";
      break;
    case "nnm":
      decal = nnm;
      fill = "#000066";
      break;
    case "oro":
      decal = oro;
      fill = "#002163";
      break;
    case "oxb":
      decal = oxb;
      fill = "#003380";
      break;
    case "pbc":
      decal = pbc;
      fill = "#0000CC";
      break;
    case "pem":
      decal = pem;
      fill = "#AAF0FF";
      break;
    case "pet":
      decal = pet;
      fill = "#071cd0";
      break;
    case "pmb":
      decal = pmb;
      fill = "#F0F0F0";
      break;
    case "ptr":
      decal = ptr;
      fill = "#000033";
      break;
    case "qcc":
      decal = qcc;
      fill = "darkgreen";
      break;
    case "qco":
      decal = qco;
      fill = "#000066";
      break;
    case "rdu":
      decal = rdu;
      fill = "#f0f0f0";
      break;
    case "rob":
      decal = rob;
      fill = "#7e0308";
      break;
    case "roc":
      decal = roc;
      fill = "#0099FF";
      break;
    case "rpc":
      decal = rpc;
      fill = "#EE0000";
      break;
    case "rsa":
      decal = rsa;
      fill = "#ff0000";
      break;
    case "sac":
      decal = sac;
      fill = "#B20000";
      break;
    case "say":
      decal = say;
      fill = "#d40000";
      break;
    case "sbh":
      decal = sbh;
      fill = "#f9f9f9";
      break;
    case "scc":
      decal = scc;
      fill = "#780025";
      break;
    case "sco":
      decal = sco;
      fill = "#8cf";
      break;
    case "sec":
      decal = ed;
      fill = "#0063cb";
      break;
    case "seh":
      decal = seh;
      fill = "#ffcc00";
      break;
    case "sel":
      decal = sel;
      fill = "#F5F5F5";
      break;
    case "shg":
      decal = shg;
      fill = "#010066";
      break;
    case "shi":
      decal = shi;
      fill = "#f9f9f9";
      break;
    case "sid":
      decal = sid;
      fill = "#000066";
      break;
    case "sne":
      decal = sne;
      fill = "#00AEEF";
      break;
    case "som":
      decal = som;
      fill = "#EE0000";
      break;
    case "spc":
      decal = spc;
      fill = "#FFFFFF";
      break;
    case "son":
      decal = son;
      fill = "#f0f0f0";
      break;
    case "srg":
      decal = srg;
      fill = "#FF0000";
      break;
    case "trh":
      decal = null;
      fill = "#202020";
      break;
    case "tro":
      decal = tro;
      fill = "#010178";
      break;
    case "usa":
      decal = usa;
      fill = "#bf0a30";
      break;
    case "uxo":
      decal = uxo;
      fill = "#000032";
      break;
    case "vet":
      decal = null;
      fill = "#A3C1AD";
      break;
    case "wad":
      decal = wad;
      fill = "#add8e6";
      break;
    case "woc":
      decal = woc;
      fill = "#0000FF";
      break;
    case "woo":
      decal = woo;
      fill = "#FFD050";
      break;
    case "xpr":
      decal = null;
      fill = "#000000";
      break;
    default:
      decal = null;
      fill = "white";
      break;
  }

  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      {...(size !== undefined && { width: size, height: (size * 230) / 500 })}
      viewBox="0 0 500 230"
      ref={ref}
      className={className}
    >
      <defs>
        <path
          id="spoonPath"
          d="M 105,75 C 105,76 106,77 107,77 C 139,89 170,149 177,181 C 231,199 389,201 455,201 C 458,201 461,198 461,195 L 450,27 C 450,24 447,21 444,21 L 113,43 C 112,43 111,44 111,45  Z"
        />

        <clipPath id="spoonClip">
          <use xlinkHref="#spoonPath" />
        </clipPath>
      </defs>
      <g>
        <use
          xlinkHref="#spoonPath"
          style={{ stroke: "black", strokeWidth: 1, fill: fill }}
        />
        <g clipRule="nonzero" clipPath="url(#spoonClip)">
          {decal}
        </g>
      </g>
    </svg>
  );
});

const abn = (
  <g transform="rotate(-3) translate(0,130)">
    <path d="M 465,-100 350,0 455,100 z" style={{ fill: "#ffdd00" }} />
  </g>
);

const abs = (
  <path d="M 432,0 l 16,250" style={{ strokeWidth: 35, stroke: "white" }} />
);

const age = (
  <g>
    <path d="M 0,55 L 145,199 L 500,205 L 500,137 Z" fill="#023A6B" />
    <path d="M 0,27 L 0,5 L 500,5 L 500,109 Z" fill="#FFFFFF" />
  </g>
);

const akn = (
  <g>
    <path d="M 345,0 L 260,230 L 500,230 L 500,0 Z" fill="#c679b6" />
  </g>
);

// Sun from http://commons.wikimedia.org/wiki/Image:Flag_of_Argentina.svg
const arg = (
  <>
    <clipPath id="vert30stripe">
      <rect
        transform="rotate(-4) scale(0.63, 0.81) translate(210, 60)"
        x="33%"
        y="0%"
        width="34%"
        height="100%"
        style={{ fill: "#003399" }}
      />
    </clipPath>
    <rect style={{ fill: "#75AADB" }} x="0" y="0" width="100%" height="100%" />
    <g clipPath="url(#vert30stripe)">
      <rect
        style={{ fill: "#F2F2F2" }}
        x="0"
        y="0"
        width="100%"
        height="100%"
      />
    </g>
    <g>
      <path
        d="M302.5 161.4c-.3-.1-.5-.4-.6-.9a619.2 619.2 0 01-2.2-21.3v-.4l-.2.4a8.2 8.2 0 00-.3 3.4c0 2.8 0 3.2-1.2 6-.9 2-1 2.3-1.2 3.4-.2 1.1-.2 2 0 3 .3 1.1.3 1.7.3 2.3-.2 1.5-1 3-1.7 3.5-.6.4-1.3.3-1.4-.1-.1-.3 0-.5.3-.9.3-.5.5-1 .6-1.7.1-.7 0-2.2-.3-3.3a8.7 8.7 0 01.5-6c1.2-3.3 1.3-3.8 1-8v-2l-.2.4a4497.2 4497.2 0 00-7.8 20c-.3.4-.9.5-1.2.1-.2 0-.2-.2-.2-.5a17276.4 17276.4 0 006.4-21.4c0-.1-1 1-1.2 1.5l-.6 1.5c-1 2.7-1.4 3.2-3.7 5.5-1.3 1.2-2 2-2.5 2.9a7 7 0 00-1 2.6c-.2 1.3-.5 2-1 2.7-1.2 1.6-3 2.4-3.6 1.6-.2-.2-.2-.5 0-.7l.5-.4c1.1-.7 1.7-2 2.2-4.4.3-1.6.4-2 .9-2.8.4-1 1-1.7 2.1-2.8 1.4-1.5 1.8-2 2.2-2.7a23.4 23.4 0 002.2-5.4l.1-.5-2.7 2.8a576221.7 576221.7 0 00-12.6 13c-.5.4-1 .2-1.2-.3-.2-.5-.8.3 12.8-16l1.6-2-1 .6c-.7.4-.9.6-1.7 1.4a12.4 12.4 0 01-5.7 3.9c-1.7.7-2.4 1-3.3 1.7-.8.6-1.4 1.2-2 2-.6.9-.8 1.2-1.4 1.7-.9.8-2 1.3-3.2 1.4-.7 0-1.1 0-1.4-.4-.2-.3-.2-.5 0-.8.1-.1.2-.2.7-.3 1.4-.2 2.5-1.1 3.9-3.3l1.1-1.5c.5-.6 1.6-1.4 2.2-1.8a48 48 0 014-1.8c1-.6 2-1.6 3.6-3.4a37.7 37.7 0 011.7-1.8l-1.8.7a86422.7 86422.7 0 01-19 8.3c-.3 0-.7-.3-.7-.6 0-.5.2-.8 1.5-1.4a1507 1507 0 0018.2-10 8 8 0 00-2.4.7 12 12 0 01-6.6 1.6c-2.1 0-2.9 0-3.8.2-1.2.3-1.8.5-2.6 1-2 1.3-2.5 1.5-4 1.6l-1.6-.1c-1-.2-1.4-.6-1.5-1.2 0-.3.3-.6.5-.6l.7.1h1.2c1.1-.1 2-.6 4-1.9a8 8 0 012.6-1.3c.6-.2.8-.2 3.4-.4 3-.2 3-.2 4.4-.7 1-.4 1.6-.6 2.8-1.3a30 30 0 012.1-1h-.3l-18.8.7c-3.3.1-3.5.1-3.8-.2-.3-.4-.2-1 .3-1.2l11.5-1.3 11.3-1.2a6.8 6.8 0 00-3.3-.5c-1.1.1-2.4 0-3.2 0-.8-.1-1.7-.4-3.6-1.1-1.9-.8-2.5-1-3.7-1.1-1-.2-1.8-.1-3.1.1-1.6.3-2.8.2-4-.3-1.5-.6-2.3-1.7-1.7-2.3.3-.4.5-.3 1 0 .9.6 1.5.7 2.8.7.7 0 1 0 2.3-.3 1.7-.4 2.4-.4 3.5-.3 1 0 1.7.3 3.6 1 2.6.9 3.2 1 7 .7l2.5-.1a2367.7 2367.7 0 00-19-7c-2-.6-2.1-.7-2.2-1.2-.1-.5.2-.9.8-.8l5.4 1.4a147157.7 147157.7 0 0016.5 4.6c-.1-.1-1-.8-1.5-1l-1.4-.6c-3-1-3.5-1.4-5.6-3.5a13.6 13.6 0 00-2.6-2.1c-1-.7-2-1-3.3-1.3a7.1 7.1 0 01-2.9-1.2c-1.2-.8-2-2-1.8-2.8 0-.3.3-.6.6-.7.3 0 .5.2.8.6l.7.8c.9.7 1.7 1 4 1.4 2.5.5 3.3.8 5.9 3.1 1.2 1.1 1.9 1.6 2.3 1.8a23.7 23.7 0 005.7 2.2 266.4 266.4 0 00-7-6.7 121482 121482 0 01-8.8-8v-1l.6-.2c.5 0 .2-.2 4.4 3.1a53042.3 53042.3 0 0113.8 10.8 6.8 6.8 0 00-2.2-2.8c-2.1-1.9-2.5-2.4-3.6-5-1-2.1-1.2-2.7-2-3.7-.6-.7-1-1-2-1.7a6.3 6.3 0 01-2.4-2.3c-.6-1-.9-2.3-.6-3 .2-.4.5-.6.8-.6.3 0 .5.1.6.7.1.7.2.9.5 1.4.5.8 1.7 1.7 3.4 2.7 1.2.7 2.3 1.9 3 3.2l.8 1.6c.7 1.4 1 2.1 1.5 2.7.6.8 1.9 2 2.8 2.7a40.3 40.3 0 012 1.7l-.6-1.4a33368.7 33368.7 0 01-8.5-18.2c-.1-.4 0-.8.2-1 .3-.3.9-.2 1.2.2l1.9 3.3a49572.7 49572.7 0 018.9 16s-.1-1.4-.3-1.8l-.7-1.8a10.7 10.7 0 01-1.3-6.1c0-1.9 0-2.7-.4-3.8-.3-1-.5-1.5-1.2-2.6a6.4 6.4 0 01-1.3-3.4c0-1 .2-2.2.6-2.6.5-.4 1-.5 1.3-.1v.5c-.2 1.2-.2 1.2 0 1.7.2 1 .6 2 1.7 3.4.8 1 1 1.5 1.3 2.2.4 1.2.5 1.7.7 4.4l.1 2.5.4 1a21 21 0 002 4.2l.5.9-.1-3.6a5791.7 5791.7 0 01-.6-18c.1-.9 1-1.1 1.5-.4a16650.9 16650.9 0 002.5 22l.2-.6a9 9 0 00.3-3.3c0-1.5 0-2.5.2-3.2l1-2.5c.9-2.3 1-2.8 1.2-4.2a7 7 0 00-.2-2.3l-.2-1.3c0-1.6.7-3.6 1.7-4.3.6-.4 1.3-.3 1.4 0 .1.3 0 .5-.3 1-.6.8-.7 1.6-.6 3.2l.3 1.8c.4 1.3.4 2 .3 3 0 1-.2 1.6-1 3.5-1 2.7-1 3-.8 6.9a138 138 0 00.2 2.3 4030.3 4030.3 0 016.5-16.8c1.3-3.5 1.4-3.6 2-3.6.4 0 .7.1.7.6.1.4 0 .7-1.7 6.2a4581.2 4581.2 0 01-4.7 15.4l.4-.4c.7-.9 1-1.4 1.4-2.5 1-2.8 1.4-3.4 3.5-5.5 2.4-2.3 3.1-3.4 3.6-5.6.3-1.2.4-1.6.8-2.2.7-1.3 2-2.5 3-2.5.5 0 .8 0 1 .3.2.3 0 .7-.6 1-.6.4-1.1 1-1.5 2-.3.7-.5 1.2-.7 2.5a8 8 0 01-.7 2.6c-.6 1.2-1.2 1.9-2.8 3.5-1 1-1.5 1.7-1.9 2.5a21.6 21.6 0 00-1.9 4.8l-.2.8 2.7-2.8a103737.6 103737.6 0 0112.6-13c.4-.3.8-.3 1 0 .3.2.3.5.2.9l-7.3 8.8-7 8.5 1.7-1 1.2-1.2c2-2 2.4-2.4 5.4-3.6 1.7-.7 2.6-1.2 3.5-1.8.8-.6 1-1 1.8-2l1.2-1.4c.9-1 2.2-1.5 3.3-1.6.7 0 1 0 1.4.3.3.3.3.6.1.8-.1.2-.2.2-.7.3-1.4.3-2.5 1.2-3.9 3.4a8.6 8.6 0 01-2.2 2.5c-.8.6-1.4 1-3.5 1.9-1.5.6-2 .9-2.9 1.7a23 23 0 00-2.3 2.4 55 55 0 01-1.7 1.8l1.8-.7 17.8-8c.9-.4 1.3-.4 1.7-.1.3.3.3.8-.2 1.2a173 173 0 01-11.9 6.3 7838.8 7838.8 0 01-7.9 4.2h.5c1.1 0 1.6-.3 3-.8 2.6-1.2 3.2-1.4 6.1-1.4 2.2 0 3.2 0 4.3-.4 1-.2 1.6-.5 2.3-1 1-.6 1.4-.9 2-1.1a7 7 0 013-.3c1.1.2 1.6.6 1.7 1.2v.5c-.3.2-.4.2-1.1 0H337c-1.1.2-2 .6-4 2a8 8 0 01-1.5.9c-1.4.5-1.4.5-4.4.7-3 .2-3 .3-4.3.7-1 .3-1.8.7-3 1.3l-1.7.8-.6.3h.3a4367.4 4367.4 0 0022-.8c.6 0 1 .3 1 .8 0 .3-.3.6-.7.8l-2.6.3a3211.7 3211.7 0 00-20 2c0 .1 0 .2.6.3 1 .2 1.7.3 2.7.3 1-.1 2.4-.1 3.2 0 .8 0 1.7.3 3.6 1.1 1.8.7 2.4.9 3.4 1 1 .2 2 .2 3.4 0 1.6-.3 2.6-.3 4 .3.8.3 1.5.9 1.7 1.3.3.5.2 1-.1 1.2-.3.1-.6 0-1-.2-.7-.6-1.4-.8-2.7-.7l-2 .2c-1.6.4-2.5.5-3.5.4-1 0-1.7-.2-2.7-.6l-1.8-.6c-2-.7-2.7-.8-6.3-.5-2.6.1-2.6.1-2.4.2a3799.2 3799.2 0 0020.3 7.3c.5.2.7.5.7.8.1.3 0 .5-.2.7-.4.2-.8.1-2-.2a22873.2 22873.2 0 01-20.5-5.8c-.2 0 .7.6 1.3 1l1.6.7a12.3 12.3 0 015.7 3.5l1.6 1.5c1.1.9 2.7 1.6 3.8 1.8 1 .2 1.5.3 2.2.6 1 .5 2 1.3 2.6 2.2l.3 1c0 .4 0 .5-.2.7-.3.4-.8.3-1.1-.3a4 4 0 00-1.3-1.2 11 11 0 00-3.9-1.1c-1.2-.2-2-.5-3-1.1a18 18 0 01-2.5-2l-2.3-1.8a23.4 23.4 0 00-5.5-2 6 6 0 00-.7-.3 168.8 168.8 0 007.5 6.8 8302.2 8302.2 0 008.8 8.1v.9c-.2.2-.3.2-.6.2h-.5l-1.5-1.1a11291.5 11291.5 0 01-16.3-12.8l1 1.5 1.4 1.4c2 1.8 2.5 2.5 3.5 5 .8 1.8 1.2 2.5 1.8 3.4.7.9 1.2 1.3 2.2 2l1.3 1c1.8 1.7 2.4 4.4 1.2 4.9-.5.2-.9-.1-.9-.7 0-1.2-1.2-2.5-3.4-3.8-1.3-.8-2-1.4-2.7-2.3-.6-.8-.8-1.1-1.5-2.7l-1.5-2.7a27.8 27.8 0 00-5-4.5 732280.5 732280.5 0 019.2 19.7c.1.4 0 .7-.2.9-.3.3-.9.2-1.2-.2a298.8 298.8 0 01-7.3-13l-2.1-3.9-1.4-2.4v.4a8 8 0 001 3.2c1.2 2.5 1.3 3.2 1.3 6 0 3 .4 4.6 1.3 6l1.2 2c.5 1.3.6 2.7.2 3.8-.2.5-.5.8-1 1-.2.1-.5 0-.7-.3v-.5c.1-.8.2-1.2 0-1.7-.2-1-.6-1.9-1.7-3.3a8.3 8.3 0 01-1.4-2.6l-.3-.8-.2-2.6a37 37 0 00-.2-3c-.3-1-1-2.6-1.8-4.2a32.4 32.4 0 01-1-2v2.4a6522.9 6522.9 0 01.5 19.5c-.2.4-.6.6-1 .4z"
        style={{ fill: "#fcbf49" }}
      />
      <path
        d="M302.5 161.4c-.5-.2-.5-.4-.8-3.4a378.9 378.9 0 00-1.3-12.1l-.7-6.8v-.3l-.2.4a9 9 0 00-.4 3.5c.1 2.7 0 3-1.1 5.8-.9 2-1 2.6-1.2 3.6-.2 1-.1 2 0 3a6 6 0 01.1 3.1c-.3 1.1-1 2.3-1.6 2.7-.5.3-1.2.2-1.3-.2-.1-.3 0-.5.3-.9s.5-1 .6-1.7c.1-.6 0-2.3-.3-3.3a7.4 7.4 0 01-.3-2.8c0-1.1.3-1.9 1-3.7 1-2.8 1.1-3.3.8-7.8l-.1-1.7a156.1 156.1 0 00-3.5 9 1666.4 1666.4 0 01-4.5 11.4c-.2.3-.7.4-1 .3-.2-.1-.4-.5-.4-.9l.8-2.7a5477.6 5477.6 0 005.7-18.6l-1.2 1.6-.6 1.4c-1 2.8-1.4 3.3-3.5 5.3a15.2 15.2 0 00-2.7 3.2c-.5.9-.7 1.3-1 2.5-.2 1.1-.3 1.6-.7 2.2-.7 1.3-2 2.4-3 2.5-.6 0-1-.2-1-.6-.1-.3 0-.5.6-.8.7-.4 1.1-1 1.5-1.9.3-.8.5-1.4.7-2.8.3-1.5.8-2.7 1.7-3.8l1.6-1.8a10 10 0 002.3-3l1.2-3.2a30 30 0 01.7-2 1485.2 1485.2 0 00-15.2 15.7c-.3.2-.8.3-1 0-.4-.2-.4-.5-.2-.9 0-.2 1.2-1.6 2.7-3.5a64508.5 64508.5 0 0111.6-13.9l-1.8 1.2c-.2 0-.6.5-1.1 1-2 2.2-2.6 2.5-5.5 3.7-2.8 1.1-4 2-5.3 3.7-.7 1-1 1.4-1.6 1.9-.9.7-2 1.1-3 1.2-.8 0-1.3-.1-1.5-.6v-.6l.8-.3c1.4-.2 2.5-1 3.9-3.3 1.4-2.2 2.3-2.9 5.7-4.4 2.2-1 2.9-1.5 5.2-4.1a35.4 35.4 0 011.7-1.8l-14 6.1c-6.7 3-6.4 3-6.8 2.9-.3 0-.7-.4-.7-.6 0-.4.2-.7.7-1a1015.6 1015.6 0 0119.6-10.4c0-.1-1 0-1.8.2-.3.1-1 .3-1.4.6a11.7 11.7 0 01-5.9 1.5c-2 0-3.4 0-4.3.2a9 9 0 00-3.6 1.6c-1.1.7-1.8.9-3 1l-1.6-.1-.9-.3c-.5-.3-.7-1-.4-1.3.2-.2.4-.2 1-.1h1.2c1.1-.1 2-.5 3.8-1.8 1-.7 1.6-1 2.6-1.3.7-.3.8-.3 3.6-.5l2.9-.2.7-.2a24.3 24.3 0 005.1-2.3l.6-.3h-1.7a60 60 0 00-4.5.2 1418.2 1418.2 0 00-16.3.5c-.7-.2-.8-1 0-1.4a43341.3 43341.3 0 0022.8-2.5l-2.2-.5H279c-2.7.1-3.5 0-6.1-1-2-.9-2.7-1-4-1.2-1-.2-1.8-.1-3.1.1-.8.2-1.1.2-1.7.2-2-.1-4-1.2-4-2.3l.1-.5c.2-.2.2-.3.5-.3l.6.3c.5.4 1.1.6 1.9.7.9.1 1.5 0 3.1-.3a9 9 0 013.4-.3c1 0 1.9.3 3.6 1 2.6.9 3.2 1 7 .7l2.6-.1-4.6-1.7a4368 4368 0 01-14.4-5.2c-2-.7-2.1-.8-2.2-1.3-.1-.5.2-.9.8-.8l5.3 1.4 16.6 4.7c.2 0-.7-.7-1.3-1l-1.7-.7c-2.9-1-3.4-1.4-5.5-3.4a14 14 0 00-3-2.4c-1-.6-1.6-.8-2.8-1-1.7-.4-3-1-3.9-2-.6-.7-1-1.6-.9-2.1 0-.3.3-.6.6-.7.3 0 .5.2.8.6.4.7 1.2 1.3 2.3 1.7l2.8.6a8 8 0 013 1l2.5 2 2.3 1.9a24 24 0 005.6 2l.8.3-.5-.4a1453.8 1453.8 0 01-16-14.5v-1l.6-.2.5.1 1.6 1.2a131835.7 131835.7 0 0016.2 12.7l-1-1.5c0-.2-.6-.8-1.2-1.2-2.2-2-2.6-2.6-3.7-5.2-.9-2-1.2-2.7-2-3.7-.7-.7-1-1-2-1.7a6.3 6.3 0 01-2.5-2.5c-.4-.7-.6-1.4-.6-2 0-.5 0-.7.2-1 .2-.3.6-.5.8-.4.3 0 .5.3.5.7 0 .7.5 1.5 1.2 2.2.6.6 1.2 1 2.3 1.7 1.1.7 1.6 1 2.2 1.7.9 1 1.1 1.4 2 3.4 1 2 1.2 2.4 2.5 3.7l3.8 3.3a60.8 60.8 0 00-2.1-4.6 8293.5 8293.5 0 00-7-15c-.2-.6 0-1.2.6-1.2.4 0 .7.2 1.1.9a3934 3934 0 0110.2 18.3l.3.5v-.7a7 7 0 00-1-2.7 10.7 10.7 0 01-1.3-6.3c0-1.7 0-2.8-.4-3.8-.3-1-.5-1.5-1.2-2.6-.7-1-.9-1.5-1.1-2.3-.3-1-.3-2.1 0-3 .4-1 1.3-1.4 1.7-.8v1.2c-.3 1 .3 2.5 1.7 4.4.7 1 1 1.6 1.4 2.4.3 1.1.4 1.6.6 4.2.1 2.3.1 2.4.3 3a24.8 24.8 0 002.4 5.1l.3.6v-.6a98 98 0 01-.3-7.2 494.7 494.7 0 01-.4-14c0-.3.4-.7.7-.7.3 0 .6.1.8.4l.5 4a1660.1 1660.1 0 002 18v.3l.2-.6c.3-1 .3-1.5.3-3.3 0-1.8 0-2.5.2-3.3 0-.3.5-1.5 1-2.7.9-2.3 1-2.8 1.2-4.2a7 7 0 00-.2-2.3c-.2-1-.2-1.6-.1-2.3.2-1.4.8-2.8 1.6-3.3.6-.4 1.3-.3 1.4 0 .1.4 0 .5-.3 1-.8 1-.9 2.5-.3 5a7 7 0 01.3 2.9c0 1-.3 1.9-1 3.6a27 27 0 00-.7 2.2c-.2.7-.3 1.7-.3 2.8l.3 4.5a176.4 176.4 0 004-10.2 2787.4 2787.4 0 004-10.3c.4-.3.8-.3 1 0 .3 0 .3.1.3.5s0 .8-1.6 6a6370.8 6370.8 0 01-4.7 15.5s1-1.2 1.1-1.6l.7-1.5c.7-2 1.1-2.8 2-3.7l1.4-1.5c1.7-1.6 2.8-3.1 3.3-4.4l.4-1.4c.2-1 .3-1.5.7-2.1.7-1.3 2-2.5 3-2.5.5 0 .8 0 1 .3.2.3 0 .7-.6 1a4 4 0 00-1.4 1.8c-.4.9-.5 1.4-.8 2.8-.4 2.5-1 3.5-3.6 6.2-1 1-1.5 1.7-1.9 2.5a24.5 24.5 0 00-1.8 4.7l-.2.7A3937.8 3937.8 0 00325.8 92c.4-.2.8-.2 1 0 .3.3.3.6.2 1l-2 2.5a29418.7 29418.7 0 01-12.4 14.8l2-1.1c0-.2.6-.7 1-1 1-1.3 2-2 2.6-2.4.5-.3 1.2-.7 2.8-1.3 2.9-1.2 4-2 5.3-3.7.3-.6.8-1.1 1-1.3 1-1 2.3-1.7 3.6-1.8.6 0 1 0 1.3.3.3.3.3.6.1.8 0 .2-.2.2-.7.3-.6.2-.9.2-1.5.6-.6.4-1.5 1.4-2.4 2.8a8.4 8.4 0 01-1.8 2.2c-1 .7-1.5 1.1-3.5 2a12.6 12.6 0 00-5.5 4.2 67 67 0 01-1.8 2 2315 2315 0 0020.4-9c.8-.2 1.3.3 1 1a11962.3 11962.3 0 00-20.2 11 6.4 6.4 0 002.7-.7c.3 0 1-.4 1.4-.6 2.1-1 3-1 5.5-1 2.7 0 3.7-.2 5.2-.7.6-.2.8-.3 2.2-1.2 1-.7 1.8-1 3-1 1 0 1.5 0 2.2.3.5.2.8.5.8.9v.5c-.3.2-.4.2-1.1 0H337c-1 .2-2 .6-3.9 2-1 .6-1.6 1-2.7 1.3l-3.4.4-3 .2-.7.2a26.8 26.8 0 00-5.1 2.3l-.5.3a322 322 0 007.8-.3 2064.3 2064.3 0 0014.4-.5c1.1.2 1.2 1.3.1 1.6l-1.5.2a6065.4 6065.4 0 01-21 2.2l2 .5h4.5c.8 0 1.7.3 3.6 1.1 1.8.7 2.3.9 3.2 1 1.3.3 2 .2 3.6 0 1.6-.3 2.7-.2 4 .3 1.5.6 2.3 1.7 1.7 2.3-.3.4-.6.3-1.1 0-.6-.6-1.8-.8-3-.7l-2 .3a9 9 0 01-3.4.3c-1-.1-1.7-.3-3.4-.9-2.9-1-3.3-1-7.2-.9l-2.6.2a46.3 46.3 0 004.4 1.6l14.2 5.2c2.4.8 2.5.9 2.6 1.4.2.5-.2.8-.8.8l-5-1.3a11928.7 11928.7 0 00-16.7-4.8c-.4-.1-.3 0 .3.4.8.6 1.3.9 2.4 1.3 2.8 1 3.6 1.4 5.6 3.4 1.4 1.3 2 1.8 2.8 2.3 1 .6 1.7 1 3 1.2 1.1.2 1.8.4 2.5.8 1.8 1 2.9 3 2 3.7-.3.3-.7.2-1-.4-.7-1-2-1.8-4.2-2.1l-2.7-.6c-1.3-.5-2-1-4-2.8l-1.9-1.6c-.8-.4-2.6-1.2-4.1-1.6a35 35 0 01-1.8-.6l-.7-.3.5.4a518 518 0 009.8 8.9 7218.6 7218.6 0 006.2 5.7v.9c-.2.2-.3.2-.6.2-.5 0 .2.6-8.6-6.3a1025.6 1025.6 0 01-9.7-7.6l1 1.5 1.3 1.3c2.1 2 2.5 2.5 3.6 5 .9 2.1 1 2.5 1.8 3.5.7.9 1.2 1.3 2.3 2 1 .7 1.4 1.1 2 1.8 1 1.3 1.3 3 .7 3.8-.1.2-.4.4-.7.3-.3 0-.4-.3-.5-.9-.2-.9-.9-1.9-2-2.7l-1.5-1c-1.2-.7-2-1.4-2.6-2.2-.5-.7-1-1.4-1.7-3-.8-1.7-1-2.1-1.9-3-.5-.7-4.3-4-4.3-3.9l1.1 2.5a10509.3 10509.3 0 018 17.7c0 .5-.6.7-1.1.5-.3-.2-.2 0-3.3-5.6a3512 3512 0 00-6.7-12l-1-2v.4c0 .8.2 1.6.9 3 1.2 2.7 1.3 3.4 1.3 6.3 0 2.7.4 4.5 1.3 6l.7 1c1.3 2 1.2 5.2-.2 5.7-.3.1-.6 0-.8-.2v-1.2c.3-1-.3-2.6-1.7-4.4-.7-1-1-1.7-1.4-2.5a13 13 0 01-.5-4l-.2-2.5-.3-.8a23.5 23.5 0 00-2.3-4.9l-.3-.6v2.5a7556.1 7556.1 0 01.6 19.5c-.2.4-.6.6-1 .4zm.6-.5v-2.2a9487.3 9487.3 0 00-.7-20.3v-.6h-.4c-.3 0-.3 0-.3.2a589 589 0 01.1 10.3 469.4 469.4 0 00-1-10.2v-.2h-.8v.5l.7 5.5c2 18.7 1.7 16.8 1.9 17 .2.2.3.2.5 0zm7.4-1.4c.6-.5.7-2.3.3-3.6-.2-.7-.4-1-1.1-2a8.5 8.5 0 01-1.5-4.7v-1.8c0-1-.1-2.8-.3-3.3-.1-.7-.4-1.3-1-2.8a8.3 8.3 0 01-1-3.4c-.1-.7-.2-1-.3-1l-.4.1-.3.1v.4c0 .7.3 1.9.5 2.4 0 .3.4 1 .7 1.6a9.2 9.2 0 011.3 3.7c0 .5 0 1.9-.2 2.5v-1a8.4 8.4 0 00-1.6-5c-.6-1.1-1.2-2.4-1.5-3.5-.2-.7-.3-.8-.4-.7l-.7.2a12.1 12.1 0 001.5 3.4 24 24 0 011.4 3.2c.4 1 .5 1.8.5 3.6.2 3 .5 4.2 1.8 6 1 1.4 1.5 2.2 1.8 3.2.2.7.2 1.6 0 2 0 .4 0 .6.2.6l.3-.2zm-15.5 1c.3-.1.8-.8 1-1.3.6-1 .7-2.3.5-3.3a8.2 8.2 0 01-.1-4c.2-1 .4-1.6 1.2-3.6l.9-2.3c.2-.9.2-1.8.2-3.3-.1-2 0-2.6.5-4 .2-.8.2-.8-.3-.9h-.4l-.2.9a8 8 0 00-.3 3.5c0 2.5 0 3.2-.6 4.5a12 12 0 01-1 1.8l.4-1c.8-2 .8-2.5.6-4.9a20.4 20.4 0 010-5h-.8v3.8c.2 3.6.1 4.6-1 7.1-.6 1.6-.9 3-.9 4.2 0 .7 0 1 .3 2l.4 2.1c0 1.5-.1 2.3-.7 3.2l-.3.5h.6zm-7.3-1.6a461 461 0 008.3-21.5l-.5-.2c-.2 0-.3.4-2 4.4a77 77 0 01-2.2 5.5 270.6 270.6 0 013.1-10c0-.2 0-.3-.3-.3l-.3-.1a123.6 123.6 0 00-1.4 4.4l-5.3 17.5c0 .5.3.7.6.3zm30.4-2v-.4a484.5 484.5 0 00-10-20.7c-.2 0-.3.2-.3.2a786.2 786.2 0 004 9.2 4373.9 4373.9 0 00-4.9-8.8l-.6.3a802.8 802.8 0 0011.8 20.1zm6.2-4.3c.3-.6 0-2-.6-2.9-.7-.9-1-1.3-2.4-2-1.6-1.2-2.7-2.6-3.9-5.5-1-2.5-1.5-3.1-3.5-5a8.4 8.4 0 01-2.3-2.7c-.5-.8-.6-1-.6-.7h-.1s-.2 0-.3.2l-.1.1.4.8a9.4 9.4 0 002.4 2.8c1.7 1.5 2.3 2.1 2.8 3.5a8.7 8.7 0 01.6 1.9l-1-2.2c-.7-1-1.2-1.6-3.1-3.1-1-.8-1.6-1.4-2.5-2.4-.5-.6-.6-.6-.7-.4l-.5.3c0 .2 1.1 1.2 2.8 2.7 2.7 2.3 3.2 3 4.3 5.3.8 1.6 1.3 2.4 1.8 3.1.7.8 1.1 1.2 2.3 1.9a13.2 13.2 0 012.4 1.6l.1.2c.2.2.8 1 1 1.5l.2.7v.4c.1.2.4.2.5-.1zm-43.4 2.8a5.5 5.5 0 002.8-4.1l.5-1.7c.5-1.2 1.5-2.6 3-4 2.2-2.2 2.4-2.5 3.5-5 .8-2.1 1-2.4 2-3.6l.5-.6-.3-.2-.4-.2s-1 1.1-1.3 1.7c-.4.6-.6 1-1 2.4l-.8 1.7c-.5 1-1.6 2.2-2.7 3l-.4.3.5-.5a9.3 9.3 0 002.7-4.5c.6-1.8.9-2.5 1.6-4l.4-.7h-.1l-.6-.3c-.2 0-1 1.7-1.4 3.4-.6 1.7-1.4 3.4-2 4.3l-1.6 1.8a11.3 11.3 0 00-2.7 3.9l-.5 1.8-.4 2a5 5 0 01-2 2.7c-.4.3-.5.4-.3.5.2.1.6.1 1-.1zm-6.7-4l3.3-3.3A17295.4 17295.4 0 01289 136l1.2-1.3-.2-.2a1 1 0 00-.3-.2l-1.6 1.5a1877.6 1877.6 0 01-6 6.2l-.3.2.3-.3a52.7 52.7 0 013.1-3.8 1135.9 1135.9 0 013.4-4l.4-.5-.3-.2a1 1 0 00-.3-.1l-4.4 5.2a34664.6 34664.6 0 01-10.4 12.8v.2h.5zm56.2-4c0-.4 0-.3-4.4-4.3a10390.7 10390.7 0 01-12.9-11.6l-.2.3-.2.2.3.3a875 875 0 007 6.6l-7.9-6.1-.3.2-.2.2 2.2 1.7a7829.7 7829.7 0 0016.4 12.7c.2 0 .2 0 .2-.3zm4.1-6c.3-.6-.6-1.9-1.7-2.6-.7-.5-1.5-.8-2.7-1a8 8 0 01-3-1c-.9-.6-1.6-1.2-3.1-2.7-2-1.8-2.5-2.2-5-3a31 31 0 01-1.7-.7l-1.8-1.3-.6-.5-.2.3-.2.4 1.5 1.2a9 9 0 002.4 1c2.4.8 3.5 1.5 4.8 3 .7.8.7.8-.4 0a9.2 9.2 0 00-4.5-2.4 18.4 18.4 0 01-4.4-1.8l-.4.7c0 .1 2 1 3.4 1.3l4 1.6 2.2 1.8c1.9 1.6 2.2 1.9 3.2 2.3.9.5 1.3.6 2.6.8 2 .3 3.1.7 4 1.4.6.3.8.5 1 1 .4.5.5.5.6.2zm-64.2 4.2a5.9 5.9 0 003-2.4c1-1.4 1.5-2 2.8-2.8.7-.4 1.4-.8 3.1-1.5a11 11 0 005.3-3.6c.8-1 1.5-1.4 2.8-2.1l.7-.5s0-.2-.2-.3c-.2-.3-.2-.3-1.2.2-1.1.7-1.6 1-2.6 2.2-1.8 2-2.6 2.5-4.7 3.2l-.8.2.8-.4c1.1-.5 2-1 2.5-1.4l1.7-1.8a18.9 18.9 0 013.4-3.4l-.5-.6c-.2 0-1.7 1.5-2.8 2.7a13 13 0 01-4.8 4l-1.6.7a10 10 0 00-3.1 2c-.4.5-1.2 1.5-1.1 1.6l-.4.4c-.4.7-1.3 1.8-1.8 2.1a4 4 0 01-2 1c-.4 0-.5.2-.5.3l.3.3c.3.1 1.1 0 1.7-.1zm33-8.3l.9-.2a17.6 17.6 0 005.7-2.7l.2-.3.7-.5c0-.1 0-.1 0 0a15 15 0 004.8-7.6 15.5 15.5 0 00-11-19 16.8 16.8 0 00-11.6 1s0 .1-.1 0a11.8 11.8 0 00-2.8 1.8c-.8.6-1.2 1-2 2a12.7 12.7 0 00-2.2 2.9 15.4 15.4 0 007.7 21.7c3 1.2 6.6 1.6 9.6 1zm-4.8-3.2c0-.8.6-1.6 1.3-2l.3-.2H300c-.6 0-1.1-.3-1.7-1-.4-.3-.7-.5-1.4-.6h-.4c-.2-.1-.2-.1 0-.3l1-.8c.7-.9 1-1 1.8-1.1h.9l.4.2.5-.2c.6-.3 1.3-.3 1.8-.1.2 0 .6.4 1 .7l1 .7.3.2h-.2l-.3.1-.5.2-.7.5c-.7.9-1 1.2-1.6 1.3-.3 0-.6.2-.4.2l1.2.5.2.1.3.5.3.8v.3l-.2-.4c-.4-.8-1-1.3-2-1.4-.4 0-1 0-1.5.4-.4.2-1 .9-1.1 1.3l-.1.4v-.3zm3.2-3l.6-.2c.5-.5 1-1 1.3-1l.4-.2.5-.1h.3l-.3-.2c-.1 0-.2-.1-.2 0l-.3-.4c-.4-.3-1.2-.6-1.8-.7l-1 .2-.6.3-.7-.2c-.6-.2-.7-.2-1 0-.6 0-1.2.4-1.7 1a4 4 0 01-.6.5h.5-.2a136.7 136.7 0 002.7-.5 3 3 0 001.7 0c.5-.3 1-.3 2-.2 1.2 0 1.2.1.2.2-.7 0-1 0-1.6.3-1 .3-1.5.3-2.4.2-1-.2-2.2-.2-2.2 0l.3.1c.3 0 .7.3 1.3.7.5.3.6.4 1.3.5.5 0 .9 0 1.5-.2zm-4.5-4.3c-.8-.3-1.1-1.3-.7-1.8.2-.3.6-.5.8-.5.2 0 .2 0 0 .2-.3.1-.5.5-.5.7 0 .2.3.5.5.6.5.2 1 0 1.2-.5v-.3l.2.3c.1.2.6.6 1 .7.4.2 1.1 0 1.5-.1.4-.2.9-.8.8-1l.2.2c.2.4.7.6 1.2.3.2 0 .3-.2.4-.4.1-.4 0-.8-.6-1h-.2l.2-.1c.3 0 .6.1.8.3.4.4.5 1 .1 1.5s-1 .7-1.5.5a5 5 0 00-.4 0v-.2h-.4c-.9.5-1.9.6-2.7.3l-.7.1c-.5.3-.8.3-1.2.2zm1.1-2.2a.8.8 0 00-.3-.1l.2-.4c.3-.4.7-1.4.9-2.2v-1.5c0-.9 0-1-.3-1.5-.5-1.3-.8-1.6-1.9-2-1-.5-2-.6-3-.5a9 9 0 00-4.5 2.1c-.7.6-.7.6-.4.2.4-.7 1.3-1.6 2.2-2.1 1-.6 1.7-.8 2.8-1a7 7 0 014.2 1.1c.4.3.5.3.7.8a9 9 0 01-.3 7.2l-.3-.1zm3.3-.8a11 11 0 01-1-2.5c-.1-.9-.2-2.5 0-3.3.1-1 .2-1.1.7-1.5a8 8 0 013-1.5c.7-.1 2-.2 2.6 0 1.1.2 2.5 1 3.3 1.7l.4.3s0 .2.2.3l.1.2-.1-.1-.7-.4-.6-.3-1.7-.7c-1-.4-1.5-.4-2.6-.4-.8 0-1 .1-1.5.3-1 .4-2.1 1-2.4 1.6a5.7 5.7 0 001 6.3l.2.3-.3.2-.2.2-.4-.7zm-8.4-1.7c-1 0-2-.5-2.6-1l.7.2c1.6.5 3 .6 4.1.2l1.2-.7c.8-.5 1-.6 1.1-.5l-.2.3c-.5.7-1.4 1.2-2.2 1.4a7 7 0 01-2.1.1zm11.3-.8c-.7-.2-.9-.2-1.3-.5-.6-.3-1-.7-1-.8 0-.2.3-.1 1.1.3 1.2.5 1.7.7 2.7.6a7 7 0 002.7-.8l.7-.3a6 6 0 01-4.9 1.5zm-11.4 0c-.8-.1-1.7-.4-2.2-.6l-.3-.3a5 5 0 013.4-1.7c1 0 1.8.3 2.7 1l.4.3-.1.2c-.6.7-2.5 1.2-4 1zm2.3-.5c.5-.2 1-.5 1-.8l-.3-.3c-.3-.3-1-.6-1.3-.7v.3c.6.4.5 1.1 0 1.6-.2.3-.2.3.6 0zm-2.4 0c-.4-.4-.4-1 0-1.5.2-.3.2-.3 0-.2-.6.2-1.5 1-1.4 1.1 0 .2 0 .2.7.5.8.4.9.4.7.1zm11.8-.4c-.8 0-1.5-.3-1.9-.6l-.1-.2.4-.4a4 4 0 012.5-1.3c.8-.1 1.4 0 2.2.3a5 5 0 011.4.9c0 .1-.7.6-1.2.8-1 .4-2.3.6-3.3.5zm.3-.3c-.5-.4-.6-1-.2-1.5.2-.3.2-.3 0-.3l-1.2.8c-.3.4-.3.5.2.8l1.5.5-.3-.3zm2.4-.4c.7-.4.9-.5.8-.7-.1-.2-1-.7-1.6-.9-.2 0-.2 0 0 .3.5.4.6 1 .3 1.4-.2.3 0 .3.5 0zm-17.9.8c-.1-.2.8-1.3 1.5-1.7a5 5 0 012.2-.8c1.3-.2 1.9 0 3 .7.9.5 1 .6 1.5.6.2 0 .3 0 .3.2l-.1.3h-.5a6 6 0 01-1-.6c-1.2-.9-2-1-3.3-.8-1.3.2-2.2.7-2.8 1.6-.4.4-.7.6-.8.5zm20.5-1.4l-.7-.5c-.6-.6-1-.9-1.8-1a4 4 0 00-1.7-.1c-1 0-1 0-1.5.3l-1.2 1c-.8.7-1 .9-1.3.7l-.2-.2c0-.2 0-.2.4-.3.3 0 .6-.2 1.3-.9 1-.7 1.5-1 2.5-1 1.4-.1 2.7.3 3.7 1.1.7.5.9 1 .5.9zm-42 19a12637.8 12637.8 0 0117.7-7.9l.2-.1-.1-.3-.2-.3a391.3 391.3 0 00-10.1 4.4 234.4 234.4 0 019.6-5.2v-.3l-.3-.3a433.6 433.6 0 00-14.6 7.7 5278.5 5278.5 0 01-6.2 3.5v.2c0 .1.2.2.5.1l3.5-1.5zm70-3.7c.3-.3 0-.5-2.1-1.3a4778.3 4778.3 0 00-20-7.1l-.2.3-.1.3 3 1 7.3 2.8a312.7 312.7 0 01-10.6-3l-.1.4v.3a13562 13562 0 0122.2 6.4l.7-.1zm-73.4-1.8c.6 0 1.5-.5 2.5-1.1a8 8 0 012.9-1.2c1-.3 2.3-.4 4-.4 1.3 0 2.8 0 3.4-.3.7-.1 1.6-.5 2.9-1 1.2-.7 1.7-.8 3-1a11 11 0 001.3-.1v-.4l-.2-.4-1 .1c-1.3.2-2 .4-3.5 1.1l-2 .9c-.9.3-2 .4-3.2.3-1.4 0-1.4-.1.2-.2 2.1-.2 2.4-.3 4.8-1.5 1.4-.7 2.4-1.1 3.7-1.5l.7-.2v-.3l-.3-.5c-.4 0-2 .7-3.3 1.4-1.2.6-2.1 1-3.4 1.4l-.9.3-2.8.2c-2.7.2-2.9.3-3.5.4a9 9 0 00-3.3 1.8c-1.9 1.3-3.6 1.8-4.8 1.4-.6-.1-.8 0-.5.3.2.4 1 .6 1.8.7l1.5-.2zm75.1-5.4c.2-.5-.9-1.3-2.1-1.7-1.1-.3-2-.3-3.8 0-1 .2-1.1.2-1.9.1-1.6-.1-2.4-.3-4.8-1.2l-2-.8c-1-.3-2-.4-4.4-.3a7 7 0 01-2.3-.2c-.5 0-1.1-.2-1.4-.3l-.6-.2v.4.5l2.3.5h4.5a9.8 9.8 0 014.2 1.5l-.6-.2a18 18 0 00-2.4-.8H321a31.7 31.7 0 01-4.6 0h-.2v.4c0 .2-.1.4 0 .4h3.7c4.3-.2 4.5-.2 7.7 1 .6.2 1.4.5 1.8.5 1.4.4 2.8.4 4.3 0 .7-.2 1.1-.3 2.2-.3h1.8c.7.1 1 .3 1.6.6l.4.3.1-.2zm-56-3.2v-.4l-5.7.1a318.5 318.5 0 01-5.6.2l11.2-1.2v-.7h-.6a183333.4 183333.4 0 01-23 2.5c-.4.2-.3.5.2.6l8.1-.2 15.4-.6v-.3zm45.2-3.3l11.1-1.2c.3-.2.3-.5 0-.6l-6.8.2-16.4.6h-.6v.3l.1.4 4.2-.1a1471.9 1471.9 0 007-.2l-9.5 1-1.7.2v.7h.8l11.8-1.3zm-45.2.1v-.3l-.6-.1a9.2 9.2 0 00-3.9-.4 10.4 10.4 0 01-5-.7l-1.4-.7 1.1.4c.8.3 1.9.5 2.5.6l2.6-.1a22 22 0 014.7 0c.2 0 .2 0 .3-.4v-.5h-3.8c-4 .3-4.6.2-6.8-.6-2.5-.9-3.2-1-4.6-1.1-.8 0-.9 0-2.3.3-1.6.3-2.7.4-3.5.4a4.9 4.9 0 01-2.3-.9h-.2c-.1-.1-.1-.1-.2 0 0 .3.1.6.6 1s1 .6 1.8.9c1 .2 1.6.2 2.7 0 1.8-.3 1.9-.3 2.7-.2 1.6 0 2.5.3 4.5 1.1a12 12 0 006.8 1.2c1.6 0 2 0 3.6.5.7.2.7.2.7-.4zm33.6-2a21.2 21.2 0 003.1-1.5c1-.5 2.8-1.2 3.6-1.3l2.6-.3c2.3 0 2.9-.2 4-.5.8-.3 1.4-.6 2.7-1.5 1.5-1 2.6-1.5 3.8-1.6h1.2c.3.2.4.2.5 0v-.3c-.4-.4-1.4-.6-2.6-.6-1.2.1-1.9.4-3.4 1.3-1 .6-1.4.8-2.4 1.1-1 .3-2.1.4-3.2.4l-2.4.1c-1.8 0-2.3.2-3.8.8-1.2.5-2.5 1-2.7 1.2l-1.5.2-1.2.1-.2.1v.4l.2.4h.4l2.5-.5 1.7-.8 1.9-.8c1.1-.4 2.5-.5 4.1-.3l-1 .2c-2.2.1-2.5.2-5 1.5-1.4.8-2.6 1.2-4.1 1.6-.2 0-.2.1-.1.4v.4c.1.1.3.1 1.3-.3zm-33-1l.1-.4a16.7 16.7 0 00-1.6-.5 579.5 579.5 0 00-8.7-3.3c.4 0 10.5 3 10.6 3l.1-.4.1-.3h-.2l-14.3-4.2c-8.9-2.5-8.2-2.3-8.4-2-.4.3 0 .4 4.2 2l18 6.4.1-.3zm40-6.7a21651.5 21651.5 0 0111.4-6c.5-.4.4-.8-.1-.7a404.3 404.3 0 00-20.5 9l-1 .5s.1 0 0 0c0 .2.2.5.3.5l9.7-4.1-4 2.2-5 2.6-.3.2.2.3.1.3 1-.5 8.1-4.3zm-38.8 3.9l.1-.3-1.2-1c-.8-.6-1.4-.8-2.7-1.2-2.4-.8-3.3-1.4-4.5-2.7-1-1.1-1-1.1.1-.2a9.1 9.1 0 004.5 2.3 18.6 18.6 0 014.4 1.8l.2-.4c.2-.3.2-.3.1-.4-.3-.2-2.3-1-3.4-1.3-1.2-.3-3.3-1.2-4-1.6l-1.8-1.4a16.6 16.6 0 00-3.2-2.5 8 8 0 00-3-1c-2-.3-3-.6-3.9-1.2-.5-.3-.8-.6-1-1.1-.4-.5-.4-.5-.6-.3-.4.6.7 2.1 2 2.9a7 7 0 002.5.8c1.9.4 3 1 4.9 2.6a21.8 21.8 0 011.8 1.7c1.3 1.2 2.1 1.7 4.4 2.5l1.7.7c.4.2 1.2.7 1.8 1.3l.6.3s0-.2.2-.3zm28.4-1.7v-.2c.2 0 1.3-1 2.4-2.3l2.6-2.6c.8-.7 1.5-1 3.7-2 2.3-1 3.4-2 4.5-3.7 1.5-2.4 3-3.6 4.3-3.7.6 0 .6-.2.2-.5-.5-.2-1.8 0-2.8.6a6 6 0 00-2 1.8 9 9 0 01-1.6 2c-1.2 1-2.1 1.5-3.8 2.2a11.6 11.6 0 00-5.6 3.7l-1.1 1a15.8 15.8 0 01-2.6 1.7l.4.6c.2 0 1.8-1 2.2-1.3l1.5-1.5a9.3 9.3 0 015.4-3.4l-.8.5c-1.1.5-2 1-2.5 1.4l-1.7 1.9a19.9 19.9 0 01-3.4 3.3l.6.6v-.1zm-26.7-1l.2-.3-.1-.2a688.7 688.7 0 00-8-7.3l3.3 2.5c4.6 3.6 5.4 4.3 5.5 4.2l.2-.2.2-.2-1-.8a2102.6 2102.6 0 01-17-13.4c-.6-.4-1-.2-.7.3L271 98a9794.3 9794.3 0 0116 14.3l.2-.2zm27.5-5.2a2474.8 2474.8 0 0111.8-14.4c0-.2-.2-.3-.4-.3a46.5 46.5 0 00-4.8 4.9l-8.2 8.5-3.3 3.5.3.2.3.2 1.5-1.5a169 169 0 016-6.2 504.8 504.8 0 01-6.4 7.9l-.4.5.2.1.3.2 3-3.6zm-25.4 3l.3-.2v-.3c-.4-.6-1-1.6-1.5-2a12 12 0 00-1.2-1.3 8.4 8.4 0 01-3.2-4.3c-.4-1-.4-1.2 0-.5l.8 1.6c.6 1 1.1 1.6 2.1 2.4a21.3 21.3 0 014 3.7l.6-.5c0-.2-1-1-2.5-2.4-2-1.8-3.1-2.8-3.7-3.7l-1-2-1-2c-.3-.6-1-1.4-1.5-1.9-.4-.4-1.5-1-1.6-1l-.4-.3a9 9 0 01-2.5-2.2c-.4-.6-.6-1-.7-1.5l-.1-.6c-.1 0-.4.1-.5.3-.1.4 0 1.2.3 2a6 6 0 002.4 2.7c1 .7 1.7 1.2 2.2 2 1 1 1.1 1.4 2 3.6 1.2 2.7 1.5 3.2 3.7 5 1.1 1.1 1.4 1.5 2.2 2.7l.5 1 .3-.3zm20.2-1.5c.4-.6.9-2 1.2-3 .6-1.9 1.4-3.5 2-4.5l1.1-1.2.7-.8c.1 0 1.6-1.6 2-2.4.5-1 .7-1.5 1-3 .3-1.7.5-2.5 1-3.4L320 89c.2 0 .4-.2.5-.3v-.2h-.5c-.7 0-1.7.7-2.4 1.7-.5.7-.7 1.3-1 2.5l-.4 1.5a11.2 11.2 0 01-2.2 3.3l-1.4 1.4c-1.8 1.7-2 2.2-3.2 5a8.2 8.2 0 01-1.7 3l-.6.7.3.2.4.2 1.4-1.7 1-2.4c.6-1.6.9-2.2 1.5-3a12 12 0 012-1.8l.3-.3-.5.6a9.8 9.8 0 00-3 5c-.4 1.6-.8 2.5-1.6 4l-.1.1.3.2.4.2.2-.3zm-17.5-.4c.3-.1.3-.2.3-.3a804.7 804.7 0 00-3.8-8.6l4.7 8.3.6-.4-1.3-2.3a20301.9 20301.9 0 01-9.8-17.6c-.3-.4-.8-.3-.7.1a739.6 739.6 0 009.7 21l.3-.2zm17.7-11.8l3.3-11c0-.3 0-.5-.3-.5a305.5 305.5 0 00-5.7 14 24320.6 24320.6 0 01-3 7.7l.8.2a705.2 705.2 0 003.9-9.8l-1.6 5.4a1589.4 1589.4 0 01-1.4 4.4c-.1.2 0 .3.2.4l.4.1 3.4-10.9zm-6.2 10v-.2-.6-2.4c-.2-3-.1-4.6.3-5.9l.6-1.8c1.1-2.7 1.2-4 .7-6.2a11 11 0 01-.4-2.1c0-1.5.1-2.4.7-3.2l.3-.5c0-.2-.5-.2-.5 0h-.1c-.2-.1-1 1-1.3 1.8-.4 1-.4 1.9-.1 3.5.3 1.4.3 2 0 3.4-.2 1-.4 1.6-1 3.2a10.6 10.6 0 00-1.3 6.2c0 1.8 0 2.1-.4 3.6l-.2.9h.8l.5-2v-2.3c0-2.5 0-3.2.6-4.6l1-1.7-.3.7c-.4 1-.7 2-.8 2.7v2.8l.2 3.2c-.2 1.6-.2 1.4.2 1.5h.5zm-8.4.5v-.9c-.2-1.6-.3-2-1.4-4.1-.7-1.4-.8-2-1-3.2 0-.8 0-1.6.2-2.5l.1 1.4.3 2c.1.6.5 1.4 1.3 2.9.7 1.3 1 1.8 1.4 3.1.3 1 .2 1 .8.8.3 0 .3 0 0-.8-.2-.8-.6-1.5-1.1-2.6-.6-1-1-1.9-1.4-2.9a10 10 0 01-.6-4c-.1-1.8-.2-2.7-.5-3.7a8 8 0 00-1.5-2.5c-.7-1-1-1.4-1.2-2-.5-1.2-.7-2.2-.5-3 .2-.5.1-.6 0-.6-.6 0-1 1.2-1 2.5.2 1 .4 1.8 1 2.8 1.2 1.7 1.3 2 1.7 3.5.2.7.3 2.2.3 3.5 0 1.3 0 2.8.2 3.5l1 2.6c.4.6.7 1.3.7 1.5.2.5.4 1.6.4 2.3v.5h.4l.4-.1zm3.3-.8l-.2-10.3v-.5.5a1099.9 1099.9 0 001.1 10v.3h.8v-.7a815.7 815.7 0 00-2.5-22.3c-.2-.2-.4-.3-.5 0a271 271 0 00.7 23h.6z"
        style={{ fill: "#843511" }}
      />
    </g>
  </>
);

const aru = (
  <g transform="rotate(-3) translate(0,130)">
    <rect fill="#000000" x="0" y="0" width="100%" height="50%" />
    <path d="M 465,-100 L 350,0 L 455,100 Z" fill="orange" />
  </g>
);

const aus = (
  <g transform="rotate(-4) translate(370, 20)">
    <path d="M 0,0 l 0,250" style={{ strokeWidth: 20, stroke: "#004000" }} />
    <path d="M 20,0 l 0,250" style={{ strokeWidth: 20, stroke: "#ffff00" }} />
    <path d="M 40,0 l 0,250" style={{ strokeWidth: 20, stroke: "#004000" }} />
  </g>
);

const aut = (
  <g transform="rotate(-3) scale(0.71 0.81) translate(140,50)">
    <rect width="100%" height="33.33%" y="33.33%" style={{ fill: "#f9f9f9" }} />
  </g>
);

const avn = (
  <path d="M 412,0 l 16,250" style={{ strokeWidth: 75, stroke: "#FEE41B" }} />
);

const bal = (
  <path
    style={{ fill: "#d40000", stroke: "none", strokeWidth: 1 }}
    d="M 109.76752,42.435275 76.110919,192.11109 428.81461,203.01844 z"
  />
);

const bbl = (
  <g transform="rotate(-4) translate(431, 20)">
    <path
      d="M 0,0 l 0,300 "
      style={{ stroke: "#ffffff", strokeWidth: 32, fill: "none" }}
    />
  </g>
);

const bed = (
  <g transform="matrix(0.99756405,-0.06975647,0.06975647,0.99756405,400.42075,-7.9513085)">
    <path
      d="M 5,0 5,300"
      style={{ fill: "none", stroke: "#000063", strokeWidth: 20 }}
    />
    <path
      d="m -15,0 0,300"
      style={{ fill: "none", stroke: "#ffffff", strokeWidth: 20 }}
    />
    <path
      d="m -55,0 0,300"
      style={{ fill: "none", stroke: "#ffffff", strokeWidth: 20 }}
    />
    <path
      d="m -75,0 0,300"
      style={{ fill: "none", stroke: "#000063", strokeWidth: 20 }}
    />
  </g>
);

const ber = (
  <g transform="rotate(-4) translate(290, 143)">
    <path
      d="M 100,-100 L 0,0 L 100,100"
      stroke="white"
      strokeWidth="20"
      fill="none"
    />
    <path
      d="M 150,-100 L 50,0 L 150,100"
      stroke="white"
      strokeWidth="20"
      fill="none"
    />
  </g>
);

const bra = (
  <g transform="rotate(-2) translate(260, 15) scale(0.085)">
    <path
      fill="#1B1D56"
      d="M 1224,2062 C 1222,2062 1221,2062 1220,2062 C 1220,2062 1220,2062 1219,2062 C 1218,2062 1217,2062 1216,2062 C 1216,2062 1215,2062 1215,2062 C 1214,2062 1213,2062 1212,2062 C 1125,2062 1039,2062 952,2062 C 1106,1915 1135,1641 1140,1402 L 1139.1403,1354.8831 L 1084,1356 C 834,1357 591,1379 444,1496 C 444,1429 444,1356 444,1288 C 444,1287 444,1286 444,1285 C 444,1218 444,1144 444,1077 C 591,1194 834,1217 1084,1218 L 1140.4181,1218.5702 L 1140,1170 C 1135,930 1107,654 952,505 C 1039,505 1125,505 1212,505 C 1213,505 1214,505 1215,505 C 1215,505 1216,505 1216,505 C 1217,505 1218,505 1219,505 C 1220,505 1220,505 1220,505 C 1221,505 1222,505 1224,505 C 1310,505 1396,505 1483,505 C 1328,654 1300,930 1295,1170 L 1293.773,1217.0018 L 1354,1218 C 1605,1217 1852,1195 2000,1077 C 2000,1144 2000,1218 2000,1285 C 2000,1286 2000,1287 2000,1288 C 2000,1356 2000,1429 2000,1496 C 1852,1378 1605,1357 1354,1356 L 1293.8154,1355.2033 L 1295,1402 C 1300,1641 1329,1915 1483,2062 C 1396,2062 1310,2062 1224,2062 z "
    />
  </g>
);

const brd = (
  <g transform="rotate(-4) translate(370, 90)">
    <path d="M 0,0 l 0,-33 l 55,33 l 0,33 z" fill="white" />
    <path d="M 0,53 l 0,-33 l 55,33 l 0,33 z" fill="white" />
    <path d="M 0,104 l 0,-33 l 55,33 l 0,33 z" fill="white" />
  </g>
);

const bul = (
  <>
    <clipPath id="vert30stripe">
      <rect
        transform="rotate(-4) scale(0.63, 0.81) translate(210, 60)"
        x="33%"
        y="0%"
        width="34%"
        height="100%"
      />
    </clipPath>
    <g clipPath="url(#vert30stripe)">
      <rect
        x="0"
        y="0"
        width="100%"
        height="100%"
        style={{ fill: "#00966e" }}
      />
    </g>
    <g transform="rotate(-4) scale(0.63, 0.81) translate(210, 60)">
      <rect
        x="67%"
        y="0%"
        width="34%"
        height="100%"
        style={{ fill: "white" }}
      />
    </g>
  </>
);

const cab = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M 0,0 l 0,300 "
      style={{ stroke: "#cccccc", strokeWidth: 30, fill: "none" }}
    />
  </g>
);

const cai = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M 0,0 l 0,300 "
      style={{ stroke: "#95E3C9", strokeWidth: 30, fill: "none" }}
    />
  </g>
);

const cam = (
  <g transform="rotate(-4) translate(400, 20)">
    <path
      d="M 10,00 l 0,300 "
      style={{ stroke: "#daaa00", strokeWidth: 17, fill: "none" }}
    />
    <path
      d="M -12.5,00 l 0,300 "
      style={{ stroke: "#7e2d40", strokeWidth: 28, fill: "none" }}
    />
    <path
      d="M -35,00 l 0,300 "
      style={{ stroke: "#daaa00", strokeWidth: 17, fill: "none" }}
    />
  </g>
);

const can = (
  <>
    <defs>
      <clipPath id="vert50stripe">
        <rect
          transform="rotate(-4) scale(0.63, 0.81) translate(210, 60)"
          x="25%"
          y="0%"
          width="50%"
          height="100%"
        />
      </clipPath>
    </defs>
    <g clipPath="url(#vert50stripe)">
      <rect
        x="0"
        y="0"
        width="100%"
        height="100%"
        style={{ fill: "#f2f2f2" }}
      />
    </g>
    <path
      transform="rotate(-4) translate(130, 50) scale(0.05)"
      d="M 3199.9526,290 L 2990.3615,698.71 C 2966.579,743.13 2923.9678,739.01 2881.3566,714.2 L 2729.6183,632.05 L 2842.7112,1259.82 C 2866.4938,1374.51 2790.1887,1374.51 2752.5317,1324.92 L 2487.7189,1014.97 L 2444.727,1172.37 C 2439.7693,1193.04 2417.971,1214.75 2385.2685,1209.58 L 2050.4097,1135.97 L 2138.3625,1470.29 C 2157.1909,1544.68 2171.8774,1575.48 2119.3545,1595.1 L 2000,1653.75 L 2576.4379,2143.29 C 2599.2536,2161.8 2610.7811,2195.11 2602.6585,2225.27 L 2552.2079,2398.37 C 2750.684,2374.45 2928.6267,2353.04 3127.0983,2329.15 C 3144.7336,2328.92 3173.9762,2344.59 3173.8558,2365.83 L 3147.5581,3000 L 3244.0581,3000 L 3228.8679,2367.19 C 3228.7474,2345.95 3255.2663,2328.92 3272.9016,2329.15 C 3471.3732,2353.04 3649.3161,2374.45 3847.7922,2398.37 L 3797.3417,2225.27 C 3789.2191,2195.11 3800.7465,2161.8 3823.5622,2143.29 L 4400,1653.75 L 4280.6456,1595.1 C 4228.1226,1575.48 4242.8092,1544.68 4261.6375,1470.29 L 4349.5905,1135.97 L 4014.7315,1209.58 C 3982.029,1214.75 3960.2307,1193.04 3955.2729,1172.37 L 3912.281,1014.97 L 3647.4683,1324.92 C 3609.8112,1374.51 3533.5061,1374.51 3557.2887,1259.82 L 3670.3814,632.05 L 3518.6434,714.2 C 3476.0311,739.01 3433.421,743.13 3409.6384,698.71"
      style={{ fill: "#ff0000" }}
    />
  </>
);

const cbs = (
  <g transform="rotate(-3) translate(-20, 130)">
    <path d="M 480,-120 L 350,0 L 480,120 Z" fill="#ffffff" />
  </g>
);

const cls = (
  <g transform="rotate(-4) translate(280, 20)">
    <path
      d="M 85,00 l 200,300 "
      style={{ stroke: "#E60707", strokeWidth: 120, fill: "none" }}
    />
    <path
      d="M 0,00 l 200,300 "
      style={{ stroke: "white", strokeWidth: 35, fill: "none" }}
    />
  </g>
);

const cnn = (
  <g transform="rotate(-4) translate(431, 20)">
    <path
      d="M 0,0 l 0,300 "
      style={{ stroke: "#fffd38", strokeWidth: 32, fill: "none" }}
    />
  </g>
);

const cco = (
  <g transform="rotate(-4) translate(410, 85)">
    <path d="M 0,0 l 0,30 l 25,-30 l 0,-30 z" fill="white" />
    <path d="M 0,55 l 0,30 l 25,-30 l 0,-30 z" fill="white" />
    <path d="M 0,110 l 0,30 l 25,-30 l 0,-30 z" fill="white" />
  </g>
);

const clh = (
  <g transform="rotate(-4) translate(400, 20)">
    <path
      d="M 5,00 l 0,300 "
      style={{ stroke: "#d40000", strokeWidth: 20, fill: "none" }}
    />
    <path
      d="M -30,00 l 0,300 "
      style={{ stroke: "#000000", strokeWidth: 20, fill: "none" }}
    />
  </g>
);

const cor = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M 0,0 l 0,300 "
      style={{ stroke: "#FFFFFF", strokeWidth: 30, fill: "none" }}
    />
  </g>
);

const coo = (
  <g transform="rotate(-4) translate(400, 20)">
    <path
      d="M 5,00 l 0,300 "
      style={{ stroke: "#800020", strokeWidth: 20, fill: "none" }}
    />
    <path
      d="M -30,00 l 0,300 "
      style={{ stroke: "#800020", strokeWidth: 20, fill: "none" }}
    />
  </g>
);

const cox = (
  <g>
    <g transform="rotate(-4) translate(170)">
      <path
        d="M 95,-5 l 390,300 "
        style={{ stroke: "#CC0000", strokeWidth: 160, fill: "none" }}
      />
    </g>
    <g transform="rotate(-60) scale(1) translate(50, 100)">
      <rect x="0" y="0" width="35" height="400" style={{ fill: "#f9f9f9" }} />
    </g>
  </g>
);

const crc = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M -218,300 l 300,-320 "
      style={{ stroke: "rgb(76, 165, 224)", strokeWidth: 20, fill: "none" }}
    />
    <path
      d="M -245.4146402,300 l 300,-320 "
      style={{ stroke: "rgb(46, 49, 146)", strokeWidth: 20, fill: "none" }}
    />
    <path
      d="M -272.8292805,300 l 300,-320 "
      style={{ stroke: "rgb(249, 222, 6)", strokeWidth: 20, fill: "none" }}
    />
  </g>
);

const cro = (
  <g transform="rotate(-4) translate(390,52)">
    <rect style={{ fill: "red" }} x="0" y="0" width="60" height="60" />
    <rect style={{ fill: "red" }} x="0" y="120" width="60" height="60" />
    <rect style={{ fill: "red" }} x="-60" y="60" width="60" height="60" />
    <rect style={{ fill: "red" }} x="-120" y="0" width="60" height="60" />
  </g>
);

const daw = (
  <g>
    <path
      d="m 337.53904,53.926029 18.1628,0.199425 -0.12489,171.551716 -18.05434,-1.84468 z"
      style={{
        fill: "#ffff00",
        stroke: "#ffff00",
        strokeWidth: 0.8894608,
      }}
      transform="matrix(0.99725744,-0.07401084,0.06574439,0.9978365,0,0)"
    />
    <path
      d="m 398.76443,48.783955 17.90459,0 -0.0784,176.637665 -17.82622,-1.24753 z"
      style={{
        fill: "#ff0000",
        stroke: "#ff0000",
        strokeWidth: 0.8975876,
      }}
      transform="matrix(0.9981883,-0.0601674,0.0627044,0.99803214,0,0)"
    />
    <path
      d="m 367.78846,48.36276 18.00852,-0.199632 -0.11215,174.167182 -17.90915,-1.34752 z"
      style={{
        fill: "#00ffff",
        stroke: "#00ffff",
        strokeWidth: 0.8922177,
      }}
      transform="matrix(0.99831419,-0.05804124,0.06411709,0.99794238,0,0)"
    />
  </g>
);

const den = (
  <g transform="rotate(-3) scale(0.71 0.81) translate(140,50)">
    <rect width="100%" height="25%" y="37.5%" style={{ fill: "#dd0000" }} />
  </g>
);

const dur = (
  <g transform="rotate(11) translate(440,-80)">
    <path
      d="M -60,00 l 80,300 "
      style={{ stroke: "#C8AC59", strokeWidth: 45, fill: "none" }}
    />
  </g>
);

const dus = (
  <g transform="translate(264,20) scale(0.070)">
    <path
      style={{ fill: "#15392D" }}
      d="M1224 2062c-2,0 -3,0 -4,0 0,0 0,0 -1,0 -1,0 -2,0 -3,0 0,0 -1,0 -1,0 -1,0 -2,0 -3,0 -87,0 -173,0 -260,0 154,-147 183,-421 188,-660l-41 0c-8,0 -15,-5 -15,-12l0 -34c-250,1 -493,23 -640,140 0,-67 0,-140 0,-208 0,-1 0,-2 0,-3 0,-67 0,-141 0,-208 147,117 390,140 640,141l0 -36c0,-7 7,-12 15,-12l41 0c-5,-240 -33,-516 -188,-665 87,0 173,0 260,0 1,0 2,0 3,0 0,0 1,0 1,0 1,0 2,0 3,0 1,0 1,0 1,0 1,0 2,0 4,0 86,0 172,0 259,0 -155,149 -183,425 -188,665l43 0c9,0 16,5 16,12l0 36c251,-1 498,-23 646,-141 0,67 0,141 0,208 0,1 0,2 0,3 0,68 0,141 0,208 -148,-118 -395,-139 -646,-140l0 34c0,7 -7,12 -16,12l-43 0c5,239 34,513 188,660 -87,0 -173,0 -259,0z"
    />
    <path
      style={{ fill: "#15392D" }}
      d="M2259 461l351 -193 30 388 -351 193 -30 -388z"
    />
    <path
      style={{ fill: "#15392D" }}
      d="M2319 1237l351 -193 30 388 -351 193 -30 -388z"
    />
    <path
      style={{ fill: "#15392D" }}
      d="M2379 2013l351 -193 30 388 -351 193 -30 -388z"
    />
  </g>
);

const emm = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M -50,00 l 80,300 "
      style={{ stroke: "#FF7777", strokeWidth: 20, fill: "none" }}
    />
    <path
      d="M -85,00 l 80,300 "
      style={{ stroke: "#FF7777", strokeWidth: 20, fill: "none" }}
    />
  </g>
);

const ed = (
  <g transform="rotate(-4) translate(400, 20)">
    <path
      d="M 19,00 l 0,300 "
      style={{ stroke: "white", strokeWidth: 18, fill: "none" }}
    />
    <path
      d="M -17,00 l 0,300 "
      style={{ stroke: "#0097ff", strokeWidth: 18, fill: "none" }}
    />
  </g>
);

const est = (
  <g transform="rotate(-3) scale(0.71 0.81) translate(140,50)">
    <rect style={{ fill: "black" }} width="100%" height="33.33%" y="33.33%" />
    <rect style={{ fill: "white" }} width="100%" height="33.33%" y="66.66%" />
  </g>
);

const fra = (
  <>
    <clipPath id="vert30stripe">
      <rect
        transform="rotate(-4) scale(0.63 0.81) translate(210,60)"
        x="33.333%"
        y="0%"
        width="33.333%"
        height="100%"
      />
    </clipPath>
    <g clipPath="url(#vert30stripe)">
      <rect
        style={{ fill: "#f2f2f2" }}
        x="0"
        y="0"
        width="100%"
        height="100%"
      />
    </g>
    <rect
      transform="rotate(-4) scale(0.63 0.81) translate(210,60) "
      x="66.666%"
      y="0%"
      width="33.333%"
      height="100%"
      style={{ fill: "#ef2b2d" }}
    />
  </>
);

const gbr = (
  <g transform="rotate(-4) translate(435,20)">
    <path
      d="M -100,100 l 0,50"
      style={{ strokeWidth: 100, stroke: "#000050" }}
    />
    <path d="M 0,0 l 0,250" style={{ strokeWidth: 30, stroke: "#B00000" }} />
    <path
      d="M -150,100 l 100,50"
      style={{ strokeWidth: 8, stroke: "#f0f0f0" }}
    />
    <path
      d="M -150,150 l 100,-50"
      style={{ strokeWidth: 8, stroke: "#f0f0f0" }}
    />
    <path
      d="M -150,100 l 100,50"
      style={{ strokeWidth: 3, stroke: "#B00000" }}
    />
    <path
      d="M -150,150 l 100,-50"
      style={{ strokeWidth: 3, stroke: "#B00000" }}
    />
    <path
      d="M -100,100 l 00,50"
      style={{ strokeWidth: 14, stroke: "#f0f0f0" }}
    />
    <path
      d="M -150,125 l 100,00"
      style={{ strokeWidth: 14, stroke: "#f0f0f0" }}
    />
    <path
      d="M -100,100 l 00,50"
      style={{ strokeWidth: 8, stroke: "#B00000" }}
    />
    <path
      d="M -150,125 l 100,00"
      style={{ strokeWidth: 8, stroke: "#B00000" }}
    />
    <path
      d="M -100,150 l 0,10"
      style={{ strokeWidth: 120, stroke: "#f0f0f0" }}
    />
    <path
      d="M -100,90 l 00,10"
      style={{ strokeWidth: 120, stroke: "#f0f0f0" }}
    />
    <path
      d="M -155,90 l 00,70"
      style={{ strokeWidth: 10, stroke: "#f0f0f0" }}
    />
    <path d="M -45,90 l 00,70" style={{ strokeWidth: 10, stroke: "#f0f0f0" }} />
  </g>
);

const gir = (
  <g>
    <path
      d="m 398.76443,48.783955 17.90459,0 -0.0797,176.659105 -17.77288,-1.07283 z"
      style={{
        fill: "#ffffff",
        stroke: "#ffffff",
        strokeWidth: 0.8975876,
      }}
      transform="matrix(0.9981883,-0.0601674,0.0627044,0.99803214,0,0)"
    />
    <path
      d="m 380.01546,49.005023 17.92068,-0.25637 -0.0121,175.582417 -17.80795,-1.53822 z"
      style={{
        fill: "#ff0000",
        stroke: "#ff0000",
        strokeWidth: 0.8975876,
      }}
      transform="matrix(0.9981883,-0.0601674,0.0627044,0.99803214,0,0)"
    />
    <path
      d="m 363.65879,27.224199 17.87215,-1.168078 10.99775,173.410529 -17.80795,-0.36422 z"
      style={{
        fill: "#ffffff",
        stroke: "#ffffff",
        strokeWidth: 0.8975876,
      }}
    />
  </g>
);

const ger = (
  <g transform="rotate(-3) scale(0.71 0.81) translate(140,50)">
    <rect style={{ fill: "#dd0000" }} width="100%" height="33.33%" y="33.33%" />
    <rect style={{ fill: "#ffce00" }} width="100%" height="33.33%" y="66.66%" />
  </g>
);

const glw = (
  <g transform="rotate(-3) translate(0,130) ">
    <rect fill="#ffff33" x="0" y="0" width="100%" height="50%" />
    <path d="M 465,-100 L 350,0 L 455,100 Z" fill="#101010" />
  </g>
);

const gre = (
  <path
    transform="rotate(-3) translate(100,30)"
    d="M 200,0 L 200,200 M 0,100 L 400,100"
    style={{ stroke: "white", strokeWidth: 25 }}
  />
);

const gtm = (
  <g>
    <path
      d="M 470,10 145,199 500,230 z"
      style={{ fill: "#00792c", stroke: "none" }}
    />
    <path
      d="m 432.14757,21.780669 12.2463,-0.840751 c 1.41425,0.238775 2.84975,0.817522 3.75407,1.651223 0.84763,1.131188 1.50412,2.26233 1.82057,3.542251 l 0.6532,9.027091 -261.11613,149.440487 -7.7643,-2.0481 -4.67062,-1.37297 -1.23447,-5.12152 -2.0185,-6.74448 -2.97685,-8.42085 z"
      style={{ fill: "#ffff00", stroke: "none" }}
    />
  </g>
);

const hec = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M 5,00 l 0,300 "
      style={{ stroke: "#FFFFFF", strokeWidth: 20, fill: "none" }}
    />
    <path
      d="M -30,00 l 0,300 "
      style={{ stroke: "#FFFFFF", strokeWidth: 20, fill: "none" }}
    />
  </g>
);

const hom = (
  <path
    d="m 396.15605,25.14572 23.99452,-1.642361 14.7652,176.467821 -23.90835,-0.0963 z"
    style={{
      fill: "#010864",
      fillOpacity: 1,
      stroke: "#010864",
      strokeWidth: 1,
    }}
  />
);

const huh = (
  <g>
    <path
      d="m 405.83742,24.395387 12.00785,-0.827315 7.38908,176.444758 -12.00785,-0.12253 z"
      style={{ fill: "#000080", stroke: "#000080", strokeWidth: 0.73573327 }}
    />
    <path
      d="m 382.99609,25.922937 12.01186,-0.799737 7.39159,174.60026 -12.01186,-0.19714 z"
      style={{ fill: "#0096ff", stroke: "#0096ff", strokeWidth: 0.73471797 }}
    />
  </g>
);

const iel = (
  <g>
    <path d="M 397,0 l 16,250" style={{ strokeWidth: 35, stroke: "#a1d3b9" }} />
    <path d="M 432,0 l 16,250" style={{ strokeWidth: 35, stroke: "#020c7e" }} />
  </g>
);

const imp = (
  <g transform="rotate(-3) scale(0.71 0.81) translate(140,50)">
    <rect fill="#EBECEC" width="100%" height="33.33%" y="33.33%" />
    <rect fill="#549DC5" width="100%" height="33.33%" y="66.66%" />
  </g>
);

const ita = (
  <>
    <clipPath id="vert30stripe">
      <rect
        transform="rotate(-4) scale(0.63 0.81) translate(210,60)"
        x="33.333%"
        y="0%"
        width="33.333%"
        height="100%"
      />
    </clipPath>
    <g clipPath="url(#vert30stripe)">
      <rect fill="#F2F2F2" x="0" y="0" width="100%" height="100%" />
    </g>
    <rect
      transform="rotate(-4) scale(0.63 0.81) translate(210,60)"
      x="66.666%"
      y="0%"
      width="33.333%"
      height="100%"
      fill="#ef2b2d"
    />
  </>
);

const jec = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M 5,00 l 0,300 "
      style={{ stroke: "darkred", strokeWidth: 20, fill: "none" }}
    />
    <path
      d="M -30,00 l 0,300 "
      style={{ stroke: "darkred", strokeWidth: 20, fill: "none" }}
    />
  </g>
);

const keb = (
  <g transform="rotate(-4)  translate(355,143) ">
    <path
      d="M 60,-100 L -15,0 L 60,100"
      style={{ stroke: "#FF191C", strokeWidth: 25, fill: "none" }}
    />
  </g>
);

const lcc = (
  <g transform="rotate(-3)  translate(0,130)">
    <path d="M 465,-100 350,0 455,100 z" style={{ fill: "#000000" }} />
  </g>
);

const lic = (
  <g>
    <path
      d="m 112.15417,44.883847 201.94289,45.675172 0.0377,-0.0011 -208.35394,-15.89754 z"
      style={{ fill: "#7ca5cd" }}
    />
    <path d="M 432,0 l 16,250" style={{ strokeWidth: 35, stroke: "#7ca5cd" }} />
  </g>
);

const lin = (
  <g>
    <path d="M 180,200 424,13" style={{ stroke: "#000000", strokeWidth: 20 }} />
    <path d="M 180,30 440,215" style={{ stroke: "#000000", strokeWidth: 20 }} />
  </g>
);

const lmh = (
  <path
    d="m 112.15417,44.883847 201.94289,45.675172 0.0377,-0.0011 -208.35394,-15.89754 z"
    style={{ fill: "#ffe600" }}
  />
);

const mag = (
  <g transform="rotate(-2)  translate(275,17)  scale(2.7)">
    <g transform="matrix(0.4701374,0.8825933,-0.8825933,0.4701374,57.211567,-103.7955)">
      <path
        transform="matrix(0.9645439,-0.7042761,0.651746,1.0422852,-34.86803,73.954067)"
        d="M 112.00066,59.382229 A 2.0834396,1.5152289 0 1 1 107.83378,59.382229 A 2.0834396,1.5152289 0 1 1 112.00066,59.382229 z"
        style={{ fill: "#fede20", fillOpacity: 1 }}
      />
      <path
        d="M 110.09967,58.943823 L 114.65928,64.818775"
        style={{
          opacity: 1,
          fill: "none",
          fillRule: "evenod",
          stroke: "#fede20",
          strokeWidth: 2,
          strokeLinecap: "butt",
          strokeLinejoin: "miter",
          strokeOpacity: 1,
        }}
      />
    </g>
    <g transform="translate(-86.707773,-38.73351)">
      <path
        transform="matrix(0.9645439,-0.7042761,0.651746,1.0422852,-34.86803,73.954067)"
        d="M 112.00066,59.382229 A 2.0834396,1.5152289 0 1 1 107.83378,59.382229 A 2.0834396,1.5152289 0 1 1 112.00066,59.382229 z"
        style={{ fill: "#fede20", fillOpacity: 1 }}
      />
      <path
        d="M 110.09967,58.943823 L 114.65928,64.818775"
        style={{
          opacity: 1,
          fill: "none",
          fillRule: "evenodd",
          stroke: "#fede20",
          strokeWidth: 2,
          strokeLinecap: "butt",
          strokeLinejoin: "miter",
          strokeOpacity: 1,
        }}
      />
    </g>
    <g transform="matrix(0.8948254,0.4464163,-0.4464163,0.8948254,-38.257953,-84.447648)">
      <path
        transform="matrix(0.9645439,-0.7042761,0.651746,1.0422852,-34.86803,73.954067)"
        d="M 112.00066,59.382229 A 2.0834396,1.5152289 0 1 1 107.83378,59.382229 A 2.0834396,1.5152289 0 1 1 112.00066,59.382229 z"
        style={{ fill: "#fede20", fillOpacity: 1 }}
      />
      <path
        d="M 110.09967,58.943823 L 114.65928,64.818775"
        style={{
          opacity: 1,
          fill: "none",
          fillRule: "evenodd",
          stroke: "#fede20",
          strokeWidth: 2,
          strokeLinecap: "butt",
          strokeLinejoin: "miter",
          strokeOpacity: 1,
        }}
      />
    </g>
    <path
      style={{
        fill: "#ffffff",
        fillRule: "evenodd",
        stroke: "#000000",
        strokeWidth: 1,
        strokeLinecap: "butt",
        strokeLinejoin: "miter",
        strokeOpacity: 1,
      }}
      d="M 28.133947,27.625083 C 26.252087,27.610473 26.974757,23.176173 28.449617,19.133493 C 30.843507,19.143933 34.932237,21.383663 35.362847,25.320673 L 35.520687,26.962173 L 33.752917,35.674743 L 29.964847,31.507863 L 28.133947,27.625083 z"
    />
    <g transform="matrix(0.6509648,0.759108,-0.759108,0.6509648,20.495457,-104.93273)">
      <path
        transform="matrix(0.9645439,-0.7042761,0.651746,1.0422852,-34.86803,73.954067)"
        d="M 112.00066,59.382229 A 2.0834396,1.5152289 0 1 1 107.83378,59.382229 A 2.0834396,1.5152289 0 1 1 112.00066,59.382229 z"
        style={{ fill: "#fede20", fillOpacity: 1 }}
      />
      <path
        d="M 110.09967,58.943823 L 114.65928,64.818775"
        style={{
          opacity: 1,
          fill: "none",
          fillRule: "evenodd",
          stroke: "#fede20",
          strokeWidth: 2,
          strokeLinecap: "butt",
          strokeLinejoin: "miter",
          strokeOpacity: 1,
        }}
      />
    </g>
    <path
      style={{
        fill: "#ffffff",
        fillRule: "evenodd",
        stroke: "#000000",
        strokeWidth: 1,
        strokeLinecap: "butt",
        strokeLinejoin: "miter",
        strokeOpacity: 1,
      }}
      d="M 52.188207,20.648723 C 48.984937,21.353103 45.746617,21.969873 43.854447,25.952023 L 45.369677,40.094153 L 53.198357,31.760393 C 53.842367,27.566143 54.198417,23.515863 52.188207,20.648723 z"
    />
    <path
      style={{
        fill: "#ffffff",
        fillRule: "evenodd",
        stroke: "#000000",
        strokeWidth: 1,
        strokeLinecap: "butt",
        strokeLinejoin: "miter",
        strokeOpacity: 1,
      }}
      d="M 19.358247,36.306083 C 33.719007,34.386583 25.890907,59.188293 40.121577,59.188293 C 54.604787,59.188293 47.083157,33.292843 61.279577,36.306083 C 61.204607,15.923273 44.378697,28.839913 43.349367,49.690603 C 44.190717,39.213433 53.282727,28.592703 40.571447,16.608113 C 28.554297,27.879993 36.141967,42.054093 36.783377,49.943143 C 30.961667,11.078523 15.395387,27.543193 19.358247,36.306083 z"
    />
    <path
      style={{
        fill: "#ffffff",
        fillRule: "evenodd",
        stroke: "#000000",
        strokeWidth: 1,
        strokeLinecap: "butt",
        strokeLinejoin: "miter",
        strokeOpacity: 1,
      }}
      d="M 28.955517,19.376023 L 31.623077,27.335683"
    />
    <path
      style={{
        fill: "none",
        fillRule: "evenodd",
        stroke: "#000000",
        strokeWidth: 1,
        strokeLinecap: "butt",
        strokeLinejoin: "miter",
        strokeOpacity: 1,
      }}
      d="M 51.935667,21.027523 L 48.905207,27.846053"
    />
    <path
      style={{
        fill: "#008000",
        fillRule: "evenodd",
        stroke: "#000000",
        strokeWidth: 1,
        strokeLinecap: "butt",
        strokeLinejoin: "miter",
        strokeOpacity: 1,
      }}
      d="M 29.537967,67.274035 C 27.729217,67.240585 28.877857,63.677445 31.336957,63.677445 C 34.252227,63.677445 37.743407,64.144715 37.825767,62.602075 L 37.952037,58.687735 C 39.130547,57.340865 40.477417,57.340865 41.992647,58.687735 C 42.012967,67.259665 41.847697,67.274035 29.537967,67.274035 z"
    />
  </g>
);

const man = (
  <g
    style={{ fill: "#ffff00" }}
    transform="matrix(0.26159327,-0.01731013,0.01858136,0.28080429,341.4759,-142.53978)"
  >
    <path
      style={{ fill: "#ffff00", stroke: "#000000", strokeWidth: 3 }}
      d="m 92.4091,758.86218 0,32.45455 41.443,0 0,94.81817 -94.8976,0 0,-41.44318 -32.4545,0 0,115.26137 32.4545,0 0,-41.44319 94.8976,0 0,94.8977 -41.443,0 0,32.4546 115.2612,0 0,-32.4546 -41.443,0 0,-94.8977 94.8181,0 0,41.44319 32.4546,0 0,-115.26137 -32.4546,0 0,41.44318 -94.8181,0 0,-94.81817 41.443,0 0,-32.45455 -115.2612,0 z"
    />
  </g>
);

const mer = (
  <g
    transform="matrix(0.28883635,-0.01855137,0.01855137,0.28883635,344.39461,109.9603)"
    style={{ fill: "#440055" }}
  >
    <g transform="translate(-630.86889,642.81708)" style={{ fill: "#440055" }}>
      <path
        d="m 701.93802,-785.42365 0,107.625 -107.625,0 0,71.75 107.625,0 0,107.625 71.75,0 0,-107.625 107.625,0 0,-71.75 -107.625,0 0,-107.625 -71.75,0 z"
        style={{
          fill: "#440055",
          fillOpacity: 1,
          fillRule: "evenodd",
          stroke: "#000000",
          strokeWidth: 3,
        }}
      />
    </g>
  </g>
);

const mgd = (
  <g transform="rotate(-4) translate(431, 20)">
    <path
      d="M 6,0 l 0,300"
      style={{ stroke: "#000fb0", strokeWidth: 20, fill: "none" }}
    />
  </g>
);

const nec = (
  <g>
    <path
      d="m 396.15605,25.301409 23.99452,-1.642361 14.7652,176.234292 -23.90835,-0.2131 z"
      style={{ fill: "#fdd017", stroke: "#fdd017", strokeWidth: 1 }}
    />
    <path
      d="m 357.75677,27.187088 23.99452,-1.642361 14.7652,174.434323 -23.90835,-0.55595 z"
      style={{ fill: "#fdd017", stroke: "none" }}
    />
  </g>
);

const nnm = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M -60,00 l 80,300 "
      style={{ stroke: "gold", strokeWidth: 60, fill: "none" }}
    />
    <path
      d="M -60,00 l 80,300 "
      style={{ stroke: "silver", strokeWidth: 20, fill: "none" }}
    />
  </g>
);

const nzl = (
  <g fill="#fff">
    <path d="M368.6 118.2l3-4.8 2.8-4.9-1-2.2a41.4 41.4 0 01-3.5-11.4c-.7-4.6-.6-5.8.4-8.2l.8-2 .7 1.6c3.9 10 5.3 15 4.9 17.7-.2 1 .3.6 1.6-1.2l1.2-1.6-.9-1.7A40.4 40.4 0 01376 88c-.1-2.8.3-4.4 1.3-6l.7-1 .6 2.4 2.1 6.8c1.4 4 1.4 4.4 1.2 6.2v2a7 7 0 001-1l1-1-1-4.3c-1.6-6.1-1.5-11 0-13.3.4-.6.8-1 .9-1a98.8 98.8 0 012.6 14.5c-.5 1.5-.1 1.6 1.3.2l1.2-1.1-.8-2.4c-1.6-4.4-1.7-10.4-.2-12.8l.8-1.2 1.4 6c1 4.8 1.3 6 1 7-.4 1.5-.3 1.5 1.2.2l1.1-1-.7-3.6c-.9-4.4-.8-8 .3-9.9.4-.7.8-1.3 1-1.2 0 0 .6 2.4 1 5.2.7 3.8.9 5.4.7 6.5-.4 1.6-.2 1.7 1.2.5l1-.8-.7-3.7c-.9-4.3-.8-7 .4-9l.9-1.5v1c0 .6.5 3 .9 5.1.5 2.8.6 4.4.4 5.4-.3 1.4 0 1.5 1.4.5.6-.6.6-.8 0-3.9-.7-4.2-.6-6.7.5-8.7l.9-1.5v1.1l.8 4.8a23.6 23.6 0 01.5 6.3l1-.5c1-.7 1-.7.4-3.8-.3-1.7-.5-4-.4-5 .2-1.9.9-3.9 1.4-4 .5-.1 1.8 7.8 1.5 9.4-.3 1.5-.1 1.6 1 .7.7-.6.7-1 .3-3.2-.6-3.5-.4-6.6.3-8 .6-.9.7-1 1-.6.4 1 1.3 7.9 1 8.5-.5 1 .2 1.2 1 .3.7-.7.9-1.1.6-1.6-.4-.8-.8-5.3-.5-6.8 0-.7.4-1.6.7-2l.6-.9.5 3.3c.4 1.8.6 3.7.5 4.2-.1 1.3.2 1.5 1 .8.4-.4.4-1 0-3.3-.6-3-.4-5 .4-6.2.4-.7.5-.6 1 2 .3 1.6.5 3.4.4 4-.2 1.4-.1 1.4.7.7.5-.4.5-.9.2-2.2-.6-2.2-.5-5.3.2-6.3.5-.8.5-.7.9 1.4.4 2.8.5 3.8.4 4.7 0 .6 0 .6.7-.2.6-.7.6-1 .3-2.4-.6-2.2-.5-4.6 0-5.5.5-.7.5-.6 1 1.8.2 1.4.3 2.8.2 3.2 0 .3 0 .6.2.6.5-.2.8-1.1.6-2-.4-1.7-.4-4.5.1-5.5l.5-.9.2 1.7.4 3c0 1 .1 1 .4.6.3-.2.3-1.4.1-2.5-.3-2.1 0-4 .4-4 .4-.2.6 1 .7 2.9 0 1 .2 1.4.4 1.3.2-.1.3-1.4.1-2.8 0-1.4 0-2.8.2-3.2.4-.6.4-.5.6.7l.2 2c0 .4.1.6.4.4.2 0 .2-1 0-2.2V50c.3-.4.5-.2.6 1 0 .9.4 1.8.6 1.4l-.1-1.5v-2.2c.3-.3.4-.2.4.7 0 1.5.7 1 .6-.4 0-1 .6-2.2 1-2.3l.1.2c.1.3 0 1.2-.4 2-.6 1.7-.6 2.1 0 1.2 1-1.2 1.4-1.4.8-.3-.3.6-.8 1-1 1.2l-.7.8c-.2.4-.4 1-.2.9l1.3-1c.7-.5 1.3-.8 1.5-.8.3.2-1.3 1.8-2.6 2.6-.8.4-1.3 1-1.3 1.3 0 .5.2.5.6.2.8-.8 3.4-1.7 3.2-1.3-.2.6-2 2-3.4 2.4a3 3 0 00-1.5 1.1c-.4.8-.4.8.1.4a8 8 0 012.6-.6l1.9-.2-1 .7c-.4.4-1.7.9-2.8 1.1-1.4.3-2 .6-2.4 1.1-.3.7-.3.7.6.5.6-.1 2-.3 3.2-.3h2l-1.1.7c-1 .5-2 .7-3.7.9-1.8.2-2.5.3-2.8.7-.4.7 0 1.1.9.9 1.3-.3 5.7.1 5.3.5-.6.7-2.8 1-5.2.8l-2.4-.1-.6.9c-.5.8-.5.9.1.7.4 0 2.1 0 3.8.4 2.7.5 3 .6 2.4 1-1 .7-3.8.7-6 .1-1.7-.4-1.8-.4-2.5.4-.9.8-.6 1.3.5 1l4 .7c3 .7 3.1.8 2.3 1.2-1.2.7-4 .6-6.5-.2-2-.6-2.1-.5-2.8.1-1 .8-.7 1.3.5 1 .4 0 2.3.4 4.2 1.1l3.6 1.3-1.7.4c-1.8.5-4.8 0-7.1-1-1.5-.6-1.7-.5-2.7.3-1 .8-.9 1.2.2 1 .6-.2 2.3.3 4.7 1.3 3.4 1.4 3.7 1.6 3 2-1.5.7-5.6 0-9.9-1.9-.5-.2-2.4 1-2.3 1.4 0 .2.6.3 1.3.3.6 0 2.8.9 4.9 1.8l3.7 1.7-1.2.4c-1.5.6-5.8-.3-8.5-1.6-2-1.1-2.2-1.1-3.4-.3l-.9.6 1.4.3c.8.1 3 1.2 5.2 2.4 3.7 2.2 3.7 2.2 2.6 2.5-1.7.4-5.6-.6-8.5-2.4-2.7-1.5-2.7-1.5-3.8-.9-1.3.8-1.3 1.2 0 1.1.7 0 2.7 1 5.5 2.7l4.4 2.7-1.6.2c-2 .3-5.5-.8-8.7-3l-2.5-1.5-1.2.8-1.1 1.1 1.4.3c.8 0 2.4.6 3.7 1.3l4.8 2.4 2.6 1.3-1.6.5c-2 .6-6-.4-10-2.6l-3-1.7-1 1c-.6.4-1 .9-1 1 0 .1.7.2 1.5.2 1 0 2.7.6 4.5 1.5l5.5 2.4 2.7 1.1-1.1.6c-2.3 1.2-8.4 0-13-2.5l-2.3-1.3-1.4 1.3a6 6 0 00-1.3 1.5c0 .1.8.2 1.6 0a8 8 0 014 .8l6.8 2.5 4.2 1.7-1.5.6c-1.7.8-4 .8-7.8 0-2.6-.6-6.6-2-7.9-3l-1.3-.4c-.5.2-2.6 2.5-2.5 3l1.4-.2c1.9-.4 3-.2 9.9 2.3l6.6 2.3c1 0 .2.6-1.8 1.3a10 10 0 01-4.8.5c-3.5-.3-8.1-1.6-11.1-3l-2.2-1.1-1.4 1.8c-.7 1-1.3 1.9-1.2 2l1.8-.2c2-.5 1.8-.5 12.3 2.2 6.6 1.6 6.8 1.7 6 2.3-3.2 2.6-11.9 2.4-19.3-.3l-2.9-1c-.2.2-7.1 14.6-7 14.9z" />
    <text fontSize="150" transform="rotate(-4 1113.6 -5056.3) scale(.2)">
      N
    </text>
    <text
      x="300"
      y="300"
      fontSize="150"
      transform="rotate(-4 1113.6 -5056.3) scale(.2)"
    >
      Z
    </text>
  </g>
);

const oro = (
  <g transform="rotate(-4) translate(400,20)">
    <path d="M 5,00 l 0,300" style={{ stroke: "#FFFFFF", strokeWidth: 20 }} />
    <path d="M -35,00 l 0,300" style={{ stroke: "#FFFFFF", strokeWidth: 20 }} />
  </g>
);

const oxb = (
  <>
    <clipPath id="vert30stripe">
      <rect
        transform="rotate(-4) scale(0.63 0.81) translate(210,60)"
        x="33.333%"
        y="0%"
        width="33.333%"
        height="100%"
      />
    </clipPath>
    <g>
      <g clipPath="url(#vert30stripe)">
        <rect fill="#F2F2F2" x="0" y="0" width="100%" height="100%" />
      </g>
      <rect
        transform="rotate(-4) scale(0.63 0.81) translate(210,60)"
        x="66.666%"
        y="0%"
        width="33.333%"
        height="100%"
        fill="#A02C2C"
      />
    </g>
  </>
);

const pbc = (
  <g transform="rotate(-4) translate(400, 20)">
    <path
      d="M 19,00 l 0,300 "
      style={{ stroke: "white", strokeWidth: 18, fill: "none" }}
    />
    <path
      d="M -17,00 l 0,300 "
      style={{ stroke: "white", strokeWidth: 18, fill: "none" }}
    />
  </g>
);

const pem = (
  <g transform="rotate(-4) translate(410,85)">
    <path d="M -60,-33 l 00,00 l 60,00 l 00,40 z" fill="#000066" />
    <path d="M -60,14 l 00,40 l 60,43 l 00,-40 z" fill="#000066" />
    <path d="M -60,100 l 00,40 l 60,6 l 0,00 z" fill="#000066" />
  </g>
);

const pet = (
  <g transform="rotate(-3)  translate(0,130)">
    <path d="M 465,-100 350,0 455,100 z" style={{ fill: "#ffff00" }} />
  </g>
);

const pmb = (
  <g>
    <path d="M 432,0 l 16,250" style={{ strokeWidth: 35, stroke: "#ff7777" }} />
  </g>
);

const ptr = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M 0,0 l 0,300 "
      style={{ stroke: "#ffffff", strokeWidth: 30, fill: "none" }}
    />
  </g>
);

const qcc = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M 0,0 l 0,300 "
      style={{ stroke: "white", strokeWidth: 30, fill: "none" }}
    />
  </g>
);

const qco = (
  <g transform="rotate(-3) scale(0.71 0.81) translate(140,50)">
    <rect fill="#FFFFFF" width="100%" height="33.33%" y="33.33%" />
    <rect fill="#000066" width="100%" height="33.33%" y="66.66%" />
  </g>
);

const rob = (
  <g>
    <path
      d="M 455,10 350,199 500,230 z"
      style={{ fill: "#ffffff", stroke: "none" }}
    />
  </g>
);

const rdu = (
  <path d="M 432,0 l 16,250" style={{ strokeWidth: 35, stroke: "#993399" }} />
);

const roc = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M 5,00 l 0,300 "
      style={{ stroke: "gold", strokeWidth: 20, fill: "none" }}
    />
    <path
      d="M -30,00 l 0,300 "
      style={{ stroke: "gold", strokeWidth: 20, fill: "none" }}
    />
  </g>
);

const rpc = (
  <path
    transform="rotate(-3) translate(100,30)"
    d="M 280,0 L 280,200 M 0,100 L 400,100"
    fill="none"
    stroke="white"
    strokeWidth="25"
  />
);

const rsa = (
  <>
    <clipPath id="t">
      <path d="M0,0 L22.5,15 L0,30" />
    </clipPath>
    <g transform=" translate(0,-60)">
      <g transform="translate(460,260) rotate(178) scale(6)">
        <rect width="60" style={{ fill: "#ffffff" }} height="10" y="10" />
        <rect width="60" height="10" style={{ fill: "#0c1c8c" }} />
        <path
          d="M0,0 L22.5,15 L0,30"
          style={{ fill: "none", stroke: "#ffffff", strokeWidth: 10 }}
        />
        <path
          d="M0,0 L22.5,15 L0,30"
          clipPath="url(#t)"
          style={{ fill: "#000000", stroke: "#fcb514", strokeWidth: 10 }}
        />
        <path
          d="M0,0 L22.5,15 L0,30"
          style={{ stroke: "#007c59", strokeWidth: 6, fill: "none" }}
        />
        <rect
          width="60"
          height="6"
          x="22.5"
          y="12"
          style={{ fill: "#007c59" }}
        />
      </g>
    </g>
  </>
);

const sac = (
  <path d="M 432,0 l 16,250" style={{ strokeWidth: 35, stroke: "#CBCBCB" }} />
);

// TODO: Confirm design is accurate
const say = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M -10,0 l 0,300 "
      style={{ stroke: "#ffcc00", strokeWidth: 120, fill: "none" }}
    />
    <path
      d="M -80,0 l 0,300 "
      style={{ stroke: "#000000", strokeWidth: 40, fill: "none" }}
    />
  </g>
);

const sbh = (
  <path
    d="m 396.15605,25.14572 23.99452,-1.642361 14.7652,176.467821 -23.90835,-0.0963 z"
    style={{ fill: "#000050", stroke: "#000050", strokeWidth: 1 }}
  />
);

const scc = (
  <g
    transform="matrix(0.65386408,0,0,0.65386408,32.566722,-135.8729)"
    style={{ fill: "#ffffff", stroke: "#ffffff" }}
  >
    <path
      d="m 538.74596,418.05956 c 1.35639,-0.1009 2.58832,-0.72665 3.45468,-1.5978 1.77142,-1.78123 2.1111,-2.23858 2.1111,-5.11287 l -0.0956,-50.04276 0.0292,0 0.15973,-50.52208 c 0.69082,-3.63935 -0.11358,-3.22553 2.27114,-5.65618 -0.99651,-0.64547 -1.98875,-0.92317 -2.9428,-0.95865 -0.19873,-0.005 -0.3821,-0.0149 -0.57568,0 -1.35636,0.1009 -2.58831,0.72664 -3.45457,1.5978 -1.77152,1.78122 -2.11115,2.23862 -2.11115,5.11291 l 0.0956,50.04275 -0.0291,0 -0.15973,50.52204 c -0.69081,3.63938 0.11359,3.22553 -2.27112,5.65618 0.99658,0.64548 1.98874,0.9232 2.94287,0.95866 0.19874,0.005 0.3821,0.0149 0.57566,0 z"
      style={{
        fill: "#ffffff",
        stroke: "#ffffff",
        strokeWidth: 0,
      }}
    />
    <path
      style={{
        fill: "#ffffff",
        stroke: "#ffffff",
        strokeWidth: 0,
      }}
      d="m 579.65873,402.94141 c 0.88809,-1.03019 1.31645,-2.34403 1.31299,-3.57259 -0.005,-2.51214 -0.0901,-3.07571 -2.12252,-5.10822 l -35.45341,-35.31769 0.0203,-0.0204 -35.61145,-35.8376 c -2.08473,-3.06211 -2.36128,-2.20031 -2.39361,-5.60545 -1.16106,0.24826 -2.05897,0.7535 -2.75869,1.40302 -0.14534,0.13525 -0.28002,0.25962 -0.4073,0.40726 -0.88808,1.03019 -1.31644,2.34404 -1.31296,3.5726 0.005,2.51218 0.0901,3.07578 2.1225,5.1082 l 35.45341,35.31778 -0.0203,0.0203 35.61143,35.83762 c 2.08474,3.06201 2.36129,2.20022 2.39361,5.60536 1.16108,-0.24827 2.05897,-0.75348 2.7587,-1.40302 0.14535,-0.13526 0.28003,-0.2599 0.40728,-0.40726 z"
    />
    <path
      d="m 597.89831,363.32152 c -0.1009,-1.35639 -0.72665,-2.58833 -1.5978,-3.45459 -1.78142,-1.77129 -2.23866,-2.11115 -5.11293,-2.11115 l -50.04276,0.0956 0,-0.0291 -50.52208,-0.15973 c -3.63937,-0.69083 -3.22552,0.11358 -5.6561,-2.27111 -0.64549,0.99651 -0.92319,1.98875 -0.95874,2.94279 -0.005,0.19872 -0.0149,0.3821 0,0.57567 0.1009,1.35639 0.72665,2.58832 1.59781,3.45456 1.78143,1.7713 2.23868,2.11118 5.11297,2.11118 l 50.04275,-0.0959 0,0.0292 50.52208,0.15974 c 3.63934,0.69081 3.22551,-0.11359 5.65614,2.27112 0.64552,-0.99659 0.92311,-1.98877 0.95866,-2.94287 0.005,-0.19872 0.0149,-0.3821 0,-0.57569 z"
      style={{
        fill: "#ffffff",
        stroke: "#ffffff",
        strokeWidth: 0,
      }}
    />
    <path
      style={{
        fill: "#ffffff",
        stroke: "#ffffff",
        strokeWidth: 0,
      }}
      d="m 582.78007,322.40879 c -1.03015,-0.88805 -2.34409,-1.31641 -3.57255,-1.31297 -2.5122,0.005 -3.0758,0.0901 -5.10823,2.1226 l -35.31779,35.45336 -0.0204,-0.0204 -35.83763,35.61142 c -3.06211,2.08477 -2.20022,2.36132 -5.60536,2.3936 0.24825,1.16109 0.75348,2.05907 1.40298,2.75882 0.13525,0.14534 0.25992,0.28002 0.40731,0.40729 1.03018,0.88806 2.34401,1.31641 3.57257,1.31298 2.51211,-0.005 3.07571,-0.0901 5.10822,-2.12253 l 35.3177,-35.45342 0.0204,0.0204 35.8376,-35.61137 c 3.06211,-2.08481 2.20032,-2.36135 5.60544,-2.39365 -0.24825,-1.16107 -0.75348,-2.059 -1.403,-2.75873 -0.13526,-0.14534 -0.25991,-0.28002 -0.4073,-0.40729 z"
    />
    <path
      transform="matrix(0.99504378,0,0,0.99504378,184.15885,70.201165)"
      d="m 370.35716,292.36218 c 0,6.50907 -5.27665,11.78572 -11.78572,11.78572 -6.50907,0 -11.78571,-5.27665 -11.78571,-11.78572 0,-6.50907 5.27664,-11.78571 11.78571,-11.78571 6.50907,0 11.78572,5.27664 11.78572,11.78571 z"
      style={{
        fill: "#ffffff",
        fillOpacity: 1,
        stroke: "#ffffff",
        strokeWidth: 0,
      }}
    />
    <path
      transform="matrix(3.6544449,0,0,3.6544449,-769.42641,-707.30716)"
      d="m 370.35716,292.36218 c 0,6.50907 -5.27665,11.78572 -11.78572,11.78572 -6.50907,0 -11.78571,-5.27665 -11.78571,-11.78572 0,-6.50907 5.27664,-11.78571 11.78571,-11.78571 6.50907,0 11.78572,5.27664 11.78572,11.78571 z"
      style={{
        fill: "none",
        stroke: "#ffffff",
        strokeWidth: 3.86204243,
      }}
    />
  </g>
);

const sco = (
  <g>
    <circle
      cx="375"
      cy="115"
      r="50"
      stroke="#900"
      strokeWidth="17"
      fill="#8cf"
    />
    <circle cx="375" cy="115" r="6" strokeWidth="0" fill="#900" />
    <g transform="translate(367.625,55.59467)" id="WheelSpike">
      <path
        fill="#900"
        strokeWidth="0"
        d="M 0.125,-0.125 C 2.8241831,-14.718465 0.37994487,-16.164559 0.125,-20.125 C 10.772964,-14.747921 12.635905,-11.317461 15.125,-0.125 C 11.115395,-0.70054519 4.4572137,-1.0540513 0.125,-0.125 z"
      />
    </g>
    <use
      x="0"
      y="0"
      xlinkHref="#WheelSpike"
      transform="matrix(0.5,0.8660254,-0.8660254,0.5,287.25289,-266.9912)"
      width="200"
      height="230"
    />
    <use
      x="0"
      y="0"
      xlinkHref="#WheelSpike"
      transform="matrix(-0.5,0.8660254,-0.8660254,-0.5,661.75289,-152.02153)"
      width="200"
      height="230"
    />
    <use
      x="0"
      y="0"
      xlinkHref="#WheelSpike"
      transform="matrix(0.5,-0.8660254,0.8660254,0.5,88.037439,382.42762)"
      width="200"
      height="230"
    />
    <use
      x="0"
      y="0"
      xlinkHref="#WheelSpike"
      transform="matrix(-0.5,-0.8660254,0.8660254,-0.5,463.2949,497.73017)"
      width="200"
      height="230"
    />
    <use
      x="0"
      y="0"
      xlinkHref="#WheelSpike"
      transform="matrix(-1,0,0,-1,749.3511,229.95588)"
      width="200"
      height="230"
    />
    <g id="WheelHub" transform="matrix(1,0,0,0.9808198,0,1.7377014)">
      <g id="HalfHub" transform="matrix(1,0,0,0.9891943,356.81499,75.281599)">
        <path
          style={{ fill: "#990000", strokeWidth: 0 }}
          d="M 18.26601,-0.98669238 C 21.039196,-0.98669238 23.811427,-0.61381072 26.452556,0.13195261 L 24.665586,4.2676717 C 21.291046,3.4501274 22.541945,3.8738881 22.22675,4.109357 C 23.011456,3.4890423 20.597372,4.3396074 21.543884,8.0913483 C 22.213371,10.745028 24.429719,17.210682 24.487937,21.197108 C 24.506445,22.464427 23.840115,26.616021 20.682395,29.594385 C 20.882093,29.729244 21.237732,29.686993 22.22675,30.45966 L 21.302881,34.118596 C 20.159131,33.536018 19.533178,33.443887 18.26601,33.368426 C 18.241806,31.99473 18.258325,-0.16313877 18.26601,-0.98669238 z"
        />
      </g>
      <use
        height="230"
        width="500"
        transform="matrix(-1,0,0,1,750.17692,0)"
        xlinkHref="#HalfHub"
        y="0"
        x="0"
      />
    </g>
    <use
      x="0"
      y="0"
      xlinkHref="#WheelHub"
      transform="matrix(-0.5,0.8660254,-0.8660254,-0.5,661.84266,-152.5083)"
      width="200"
      height="230"
    />
    <use
      x="0"
      y="0"
      xlinkHref="#WheelHub"
      transform="matrix(0.5,0.8660254,-0.8660254,0.5,286.7542,-267.59977)"
      width="200"
      height="230"
    />
    <use
      x="0"
      y="0"
      xlinkHref="#WheelHub"
      transform="matrix(-1,0,0,-1,750.17692,229.74097)"
      width="200"
      height="230"
    />
    <use
      x="0"
      y="0"
      xlinkHref="#WheelHub"
      transform="matrix(-0.5,-0.8660254,0.8660254,-0.5,463.06917,497.34074)"
      width="200"
      height="230"
    />
    <use
      x="0"
      y="0"
      xlinkHref="#WheelHub"
      transform="matrix(0.5,-0.8660254,0.8660254,0.5,87.98071,382.42606)"
      width="200"
      height="230"
    />
  </g>
);

const seh = (
  <g
    style={{ fill: "#d40000", stroke: "none" }}
    transform="matrix(0.26159327,-0.01731013,0.01858136,0.28080429,341.4759,-142.53978)"
  >
    <path
      style={{
        fill: "#d40000",
        fillOpacity: 1,
        stroke: "none",
        strokeWidth: 3,
      }}
      d="m 92.4091,758.86218 0,32.45455 41.443,0 0,94.81817 -94.8976,0 0,-41.44318 -32.4545,0 0,115.26137 32.4545,0 0,-41.44319 94.8976,0 0,94.8977 -41.443,0 0,32.4546 115.2612,0 0,-32.4546 -41.443,0 0,-94.8977 94.8181,0 0,41.44319 32.4546,0 0,-115.26137 -32.4546,0 0,41.44318 -94.8181,0 0,-94.81817 41.443,0 0,-32.45455 -115.2612,0 z"
    />
  </g>
);

const sel = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M 5,00 l 0,300 "
      style={{ stroke: "gold", strokeWidth: 20, fill: "none" }}
    />
    <path
      d="M -30,00 l 0,300 "
      style={{ stroke: "maroon", strokeWidth: 20, fill: "none" }}
    />
  </g>
);

const shi = (
  <path
    d="m 282.83473,22.488545 -181.38882,16.46439 7.51845,156.678165 362.67705,15.01403 z"
    style={{ fill: "#000032" }}
  />
);

const shg = (
  <g transform="rotate(-3)  translate(0,130) ">
    <rect fill="#010066" x="0" y="0" width="100%" height="50%" />
    <path d="M 465,-100 L 350,0 L 455,100 Z" fill="#FFFFFF" />
    <path d="M 453,-100 L 410,0 L 450,100 Z" fill="#FFFF00" />
  </g>
);

const sid = (
  <g transform="rotate(-4) translate(410,80)">
    <path d="M 0,0 l 0,15 l 15,-15 l 0,-15 z" fill="red" />
    <path d="M 0,40 l 0,15 l 15,-15 l 0,-15 z" fill="red" />
    <path d="M 0,80 l 0,15 l 15,-15 l 0,-15 z" fill="red" />
    <path d="M 0,120 l 0,15 l 15,-15 l 0,-15 z" fill="red" />
  </g>
);

const sne = (
  <g transform="matrix(0.99756405,-0.06975647,0.06975647,0.99756405,397.77684,-2.7542188)">
    >
    <path
      d="m -30.534,26.522 -0.521,174.724 58.477,4.757 0.136,-178.76 -58.092,-0.721 z"
      style={{ fill: "#2e3192" }}
    />
  </g>
);

const som = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M 5,00 l 0,300 "
      style={{ stroke: "#000000", strokeWidth: 20, fill: "none" }}
    />
    <path
      d="M -30,00 l 0,300 "
      style={{ stroke: "#000000", strokeWidth: 20, fill: "none" }}
    />
  </g>
);

const spc = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M -170,10 l 320,300 "
      style={{ stroke: "#006600", strokeWidth: 60, fill: "none" }}
    />
    <path
      d="M -170,10 l 320,300 "
      style={{ stroke: "#FFCC00", strokeWidth: 20, fill: "none" }}
    />
  </g>
);

const son = (
  <g transform="rotate(-4) translate(380,20)">
    <path
      d="M 0,0 l 0,100 l 40,40 l 0,100 M 40,0 l 0,100 l -40,40 l 0,100"
      style={{ stroke: "blue", strokeWidth: 15, fill: "none" }}
    />
  </g>
);

const srg = (
  <g>
    <linearGradient id="gradient_to_transparent" x1="0%" x2="100%">
      <stop offset="0" stopColor="#ffcc00" stopOpacity="0" />
      <stop offset="0.5" stopColor="#ffcc00" stopOpacity="1" />
      <stop offset="1" stopColor="#ffcc00" stopOpacity="1" />
    </linearGradient>
    <g transform="rotate(-3) scale(0.71 0.81) translate(140,50)">
      <rect
        fill="url(#gradient_to_transparent)"
        width="50%"
        height="100%"
        x="50%"
      />
    </g>
  </g>
);

const tro = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M 0,0 l 0,300 "
      style={{ stroke: "#FFFFFF", strokeWidth: 30, fill: "none" }}
    />
  </g>
);

const usa = (
  <g transform="rotate(-3) translate(0,130) ">
    <rect style={{ fill: "#002868" }} x="0" y="0" width="100%" height="50%" />
    <path d="M 465,-100 L 350,0 L 455,100 Z" style={{ fill: "white" }} />
  </g>
);

const uxo = (
  <path
    d="m 424.42026,89.075166 c -4.09987,10.072123 -9.43267,12.970924 -12.56042,13.259354 -3.12776,0.28843 -9.59816,0.8851 -9.61019,0.96737 -0.012,0.0823 -0.58156,-6.457871 -0.86999,-9.585619 -0.28842,-3.127751 1.61684,-8.926434 10.73873,-14.773437 -4.08387,-3.166333 -7.74153,-2.783318 -10.48148,-1.387772 -2.59335,-4.880959 -4.97276,-7.084454 -9.61588,-8.685959 -4.27528,2.387515 -6.21159,4.988979 -7.8686,10.261889 -2.94896,-0.870939 -6.61498,-0.578587 -10.05093,3.281195 10.03734,4.080218 12.97092,9.432671 13.25934,12.560431 0.28844,3.127751 0.87896,9.531472 0.95884,9.528382 0.0798,-0.004 -6.58227,0.61058 -9.71003,0.89902 -3.12775,0.28842 -8.92642,-1.61684 -14.76059,-10.723428 -3.17917,4.068567 -2.79616,7.726228 -1.40061,10.466178 -0.78165,0.41766 -5.96508,2.37725 -8.64986,9.61255 2.42363,4.27195 5.02509,6.20827 10.298,7.86526 -0.87094,2.94897 -0.5786,6.61498 3.28119,10.05095 4.08022,-10.03735 9.43267,-12.97094 12.56042,-13.25937 3.12776,-0.28843 9.7315,-0.8974 9.65584,-0.97022 -0.0756,-0.0729 0.53028,6.4976 0.81871,9.62536 0.28843,3.12775 -1.61684,8.92642 -10.73873,14.77342 0.1424,0.10996 4.02461,4.08003 10.48148,1.38778 0.41766,0.78165 2.37725,5.96508 9.61257,8.64985 4.27193,-2.42361 6.20825,-5.02508 7.86524,-10.29799 2.94896,0.87094 6.61498,0.57859 10.05093,-3.28119 -10.03733,-4.08022 -12.97091,-9.43267 -13.25934,-12.56044 -0.28843,-3.12775 -0.89125,-9.66482 -0.96573,-9.57677 -0.0745,0.088 6.52924,-0.52095 9.65699,-0.80938 3.12776,-0.28843 8.92643,1.61685 14.77343,10.73874 0.11405,-0.14772 4.0543,-3.99452 1.38778,-10.48148 0.78115,-0.4174 5.99207,-2.39945 8.68596,-9.6159 -2.38752,-4.27526 -4.98898,-6.21158 -10.2619,-7.868581 0.87095,-2.948962 0.59824,-6.64976 -3.28119,-10.050929 z"
    style={{
      fill: "#fdd400",
      fillOpacity: 1,
      fillRule: "evenodd",
      stroke: "#000000",
      strokeWidth: 0,
      strokeLinecap: "butt",
      strokeLinejoin: "miter",
    }}
  />
);

const wad = (
  <g
    transform="matrix(0.28266997,-0.02406952,0.02406952,0.28266997,323.94612,-142.59428)"
    style={{ fill: "#ffffff", stroke: "none" }}
  >
    <path
      d="m 75.70255,758.86218 c 30.0825,37.7971 39.7439,76.0451 37.9979,106.9883 -30.9796,1.8011 -69.319,-7.8481 -107.2006,-37.9978 2.9542,24.4032 16.7929,44.5271 16.7929,74.2974 0,29.7703 -13.8387,50.1066 -16.7929,74.5097 37.8816,-30.1496 76.221,-40.0111 107.2006,-38.2101 l 0,0.212 c 1.801,30.9796 -7.8481,69.31902 -37.9979,107.20052 24.4032,-2.9542 44.5272,-16.7929 74.2975,-16.7929 29.7703,0 50.1065,13.8387 74.5097,16.7929 -30.1497,-37.8815 -40.0112,-76.22092 -38.2101,-107.20052 l 0,-0.212 c 30.9796,-1.801 69.319,8.0605 107.2005,38.2101 -2.9542,-24.4031 -16.7929,-44.7394 -16.7929,-74.5097 0,-29.7703 13.8387,-49.8942 16.7929,-74.2974 -37.8815,30.1497 -76.2209,39.7989 -107.2005,37.9978 -1.7451,-30.9432 8.1276,-69.1912 38.2101,-106.9883 -24.4032,2.9543 -44.7394,16.7929 -74.5097,16.7929 -29.7703,0 -49.8943,-13.8386 -74.2975,-16.7929 z"
      style={{ fill: "#ffffff", stroke: "none" }}
    />
  </g>
);

const woc = (
  <path
    d="m 398.56359,25.01348 21.01371,-1.395417 12.93093,176.316257 -20.93824,-0.17775 z"
    style={{ fill: "#ffff00", stroke: "#ffff00", strokeWidth: 0.97328287 }}
  />
);

const woo = (
  <g transform="rotate(-4) translate(400,20)">
    <path
      d="M 0,0 l 0,300 "
      style={{ stroke: "#8B0000", strokeWidth: 30, fill: "none" }}
    />
  </g>
);

export default Blade;
